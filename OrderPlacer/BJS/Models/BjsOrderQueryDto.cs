// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using OrderPlacer.Bjs.Models;
//
//    var bjsOrderHistoryQueryDto = BjsOrderHistoryQueryDto.FromJson(jsonString);

namespace OrderPlacer.Bjs.Models
{
    using Newtonsoft.Json;

    public partial class BjsOrderHistoryQueryDto
    {
        public BjsOrderHistoryQueryDto(int PageNo = 1)
        {
            ServiceName = "";
            Page = new Page()
            {
                EnterpriseCode = "BJSUS",
                EntryType = "" ,
                ExtnWcsUserId = 1013815277,
                LineType = "",
                PageNo = PageNo,
                PageSize = 120,
            };
        }
        [JsonProperty("ServiceName", NullValueHandling = NullValueHandling.Ignore)]
        public string ServiceName { get; set; }

        [JsonProperty("Page", NullValueHandling = NullValueHandling.Ignore)]
        public Page Page { get; set; }
    }

    public partial class Page
    {
        [JsonProperty("PageSize", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? PageSize { get; set; }

        [JsonProperty("PageNo", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? PageNo { get; set; }

        [JsonProperty("EnterpriseCode", NullValueHandling = NullValueHandling.Ignore)]
        public string EnterpriseCode { get; set; }

        [JsonProperty("ExtnWCSUserID", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ExtnWcsUserId { get; set; }

        [JsonProperty("EntryType", NullValueHandling = NullValueHandling.Ignore)]
        public string EntryType { get; set; }

        [JsonProperty("LineType", NullValueHandling = NullValueHandling.Ignore)]
        public string LineType { get; set; }
    }

    public partial class BjsOrderHistoryQueryDto
    {
        public static BjsOrderHistoryQueryDto FromJson(string json) => JsonConvert.DeserializeObject<BjsOrderHistoryQueryDto>(json, Converter.Settings);
    }


}
