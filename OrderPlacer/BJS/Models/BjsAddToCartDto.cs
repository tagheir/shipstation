// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using OrderPlacer.SamsClub.Models;
//
//    var bjsAddToCartDto = BjsAddToCartDto.FromJson(jsonString);

namespace OrderPlacer.Bjs.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class BjsAddToCartDto
    {
        [JsonProperty("URL", NullValueHandling = NullValueHandling.Ignore)]
        public string Url { get; set; }

        [JsonProperty("activeChoice", NullValueHandling = NullValueHandling.Ignore)]
        public string ActiveChoice { get; set; }

        [JsonProperty("catalogId", NullValueHandling = NullValueHandling.Ignore)]
        public string CatalogId { get; set; }

        [JsonProperty("comment", NullValueHandling = NullValueHandling.Ignore)]
        public string Comment { get; set; }

        [JsonProperty("errorView", NullValueHandling = NullValueHandling.Ignore)]
        public string ErrorView { get; set; }

        [JsonProperty("isExpired", NullValueHandling = NullValueHandling.Ignore)]
        public string IsExpired { get; set; }

        [JsonProperty("itemType", NullValueHandling = NullValueHandling.Ignore)]
        public string ItemType { get; set; }

        [JsonProperty("orderId", NullValueHandling = NullValueHandling.Ignore)]
        public string OrderId { get; set; }

        [JsonProperty("purchaseFlow", NullValueHandling = NullValueHandling.Ignore)]
        public string PurchaseFlow { get; set; }

        [JsonProperty("itemList", NullValueHandling = NullValueHandling.Ignore)]
        public List<ItemList> ItemList { get; set; }

        [JsonProperty("itemsCheckInCartReq", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> ItemsCheckInCartReq { get; set; }

        [JsonProperty("qofferId", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> QofferId { get; set; }
    }

    public partial class ItemList
    {
        [JsonProperty("catEntryId", NullValueHandling = NullValueHandling.Ignore)]
        public string CatEntryId { get; set; }

        [JsonProperty("partNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string PartNumber { get; set; }

        [JsonProperty("physicalStoreId", NullValueHandling = NullValueHandling.Ignore)]
        public string PhysicalStoreId { get; set; }

        [JsonProperty("pickUpInStore", NullValueHandling = NullValueHandling.Ignore)]
        public string PickUpInStore { get; set; }

        [JsonProperty("quantity", NullValueHandling = NullValueHandling.Ignore)]
        public long? Quantity { get; set; }

        [JsonProperty("serviceZipcode", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ServiceZipcode { get; set; }
    }

    public partial class BjsAddToCartDto
    {
        public static BjsAddToCartDto FromJson(string json) => JsonConvert.DeserializeObject<BjsAddToCartDto>(json, Converter.Settings);
    }


}
