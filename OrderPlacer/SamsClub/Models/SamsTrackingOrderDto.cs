// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using OrderPlacer.SamsClub.Models;
//
//    var samsTrackingOrderDto = SamsTrackingOrderDto.FromJson(jsonString);

namespace OrderPlacer.SamsClub.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class SamsTrackingOrderDto
    {
        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("totalRecords", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalRecords { get; set; }

        [JsonProperty("orders", NullValueHandling = NullValueHandling.Ignore)]
        public List<Order> Orders { get; set; }
    }

    public partial class Order
    {
        [JsonProperty("orderNo", NullValueHandling = NullValueHandling.Ignore)]
        public string OrderNo { get; set; }

        [JsonProperty("orderDate", NullValueHandling = NullValueHandling.Ignore)]
        public string OrderDate { get; set; }

        [JsonProperty("orderType", NullValueHandling = NullValueHandling.Ignore)]
        public string OrderType { get; set; }

        [JsonProperty("orderPurpose", NullValueHandling = NullValueHandling.Ignore)]
        public string OrderPurpose { get; set; }

        [JsonProperty("orderSource", NullValueHandling = NullValueHandling.Ignore)]
        public string OrderSource { get; set; }

        [JsonProperty("kioskClubId", NullValueHandling = NullValueHandling.Ignore)]
        public string KioskClubId { get; set; }

        [JsonProperty("tcNo")]
        public object TcNo { get; set; }

        [JsonProperty("instantSavingFlag", NullValueHandling = NullValueHandling.Ignore)]
        public bool? InstantSavingFlag { get; set; }

        [JsonProperty("fulfillmentType")]
        public object FulfillmentType { get; set; }

        [JsonProperty("isCancellable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsCancellable { get; set; }

        [JsonProperty("documentType", NullValueHandling = NullValueHandling.Ignore)]
        public string DocumentType { get; set; }

        [JsonProperty("visitSubType")]
        public object VisitSubType { get; set; }

        [JsonProperty("overallTotals", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, double> OverallTotals { get; set; }

        [JsonProperty("priceInfo", NullValueHandling = NullValueHandling.Ignore)]
        public PriceInfo PriceInfo { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("billToAddress", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, string> BillToAddress { get; set; }

        [JsonProperty("shipToAddress", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, string> ShipToAddress { get; set; }

        [JsonProperty("headerCharges")]
        public object HeaderCharges { get; set; }

        [JsonProperty("orderInvoices", NullValueHandling = NullValueHandling.Ignore)]
        public List<OrderInvoice> OrderInvoices { get; set; }

        [JsonProperty("paymentMethods", NullValueHandling = NullValueHandling.Ignore)]
        public List<PaymentMethodElement> PaymentMethods { get; set; }

        [JsonProperty("shipments", NullValueHandling = NullValueHandling.Ignore)]
        public List<Shipment> Shipments { get; set; }

        [JsonProperty("chargeTransactionDetails", NullValueHandling = NullValueHandling.Ignore)]
        public List<ChargeTransactionDetail> ChargeTransactionDetails { get; set; }

        [JsonProperty("orderReleases", NullValueHandling = NullValueHandling.Ignore)]
        public List<OrderRelease> OrderReleases { get; set; }

        [JsonProperty("isOpen", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsOpen { get; set; }

        [JsonProperty("buyerInfo", NullValueHandling = NullValueHandling.Ignore)]
        public BuyerInfo BuyerInfo { get; set; }

        [JsonProperty("returnInfo", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> ReturnInfo { get; set; }

        [JsonProperty("lineItemsGroup", NullValueHandling = NullValueHandling.Ignore)]
        public List<LineItemsGroup> LineItemsGroup { get; set; }
    }

    public partial class BuyerInfo
    {
        [JsonProperty("membershipNo", NullValueHandling = NullValueHandling.Ignore)]
        public string MembershipNo { get; set; }

        [JsonProperty("eMailID", NullValueHandling = NullValueHandling.Ignore)]
        public string EMailId { get; set; }

        [JsonProperty("primaryMembershipID", NullValueHandling = NullValueHandling.Ignore)]
        public string PrimaryMembershipId { get; set; }
    }

    public partial class ChargeTransactionDetail
    {
        [JsonProperty("chargeType", NullValueHandling = NullValueHandling.Ignore)]
        public string ChargeType { get; set; }

        [JsonProperty("creditCardTransactions")]
        public List<CreditCardTransaction> CreditCardTransactions { get; set; }

        [JsonProperty("paymentMethod", NullValueHandling = NullValueHandling.Ignore)]
        public ChargeTransactionDetailPaymentMethod PaymentMethod { get; set; }

        [JsonProperty("transferFromOrder", NullValueHandling = NullValueHandling.Ignore)]
        public TransferFromOrder TransferFromOrder { get; set; }

        [JsonProperty("debitAmount", NullValueHandling = NullValueHandling.Ignore)]
        public double? DebitAmount { get; set; }
    }

    public partial class CreditCardTransaction
    {
        [JsonProperty("authAmount", NullValueHandling = NullValueHandling.Ignore)]
        public double? AuthAmount { get; set; }
    }

    public partial class ChargeTransactionDetailPaymentMethod
    {
        [JsonProperty("displayCreditCardNo")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DisplayCreditCardNo { get; set; }

        [JsonProperty("creditCardNo")]
        public string CreditCardNo { get; set; }

        [JsonProperty("creditCardExpDate")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CreditCardExpDate { get; set; }

        [JsonProperty("paymentType")]
        public string PaymentType { get; set; }

        [JsonProperty("paymentKey")]
        public string PaymentKey { get; set; }

        [JsonProperty("totalAuthorized")]
        public long? TotalAuthorized { get; set; }

        [JsonProperty("svcNo")]
        public string SvcNo { get; set; }

        [JsonProperty("totalCharged")]
        public double? TotalCharged { get; set; }

        [JsonProperty("totalRefundedAmount")]
        public long? TotalRefundedAmount { get; set; }

        [JsonProperty("cashbackAmount")]
        public object CashbackAmount { get; set; }

        [JsonProperty("paymentReference2")]
        public string PaymentReference2 { get; set; }

        [JsonProperty("paymentReference3")]
        public string PaymentReference3 { get; set; }

        [JsonProperty("maxChargeLimit")]
        public object MaxChargeLimit { get; set; }
    }

    public partial class TransferFromOrder
    {
        [JsonProperty("orderNo")]
        public object OrderNo { get; set; }
    }

    public partial class LineItemsGroup
    {
        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public List<ItemElement> Items { get; set; }

        [JsonProperty("address", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, string> Address { get; set; }

        [JsonProperty("shipmentQty", NullValueHandling = NullValueHandling.Ignore)]
        public long? ShipmentQty { get; set; }

        [JsonProperty("count", NullValueHandling = NullValueHandling.Ignore)]
        public long? Count { get; set; }
    }

    public partial class ItemElement
    {
        [JsonProperty("info", NullValueHandling = NullValueHandling.Ignore)]
        public Info Info { get; set; }
    }

    public partial class Info
    {
        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("deliveryDate", NullValueHandling = NullValueHandling.Ignore)]
        public string DeliveryDate { get; set; }

        [JsonProperty("trackingNo", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingNo { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("shipmentItems", NullValueHandling = NullValueHandling.Ignore)]
        public List<ShipmentItem> ShipmentItems { get; set; }
    }

    public partial class ShipmentItem
    {
        [JsonProperty("primeLineNo", NullValueHandling = NullValueHandling.Ignore)]
        public long? PrimeLineNo { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("purpose", NullValueHandling = NullValueHandling.Ignore)]
        public string Purpose { get; set; }

        [JsonProperty("unitOfMeasure", NullValueHandling = NullValueHandling.Ignore)]
        public string UnitOfMeasure { get; set; }

        [JsonProperty("isBundleParent", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsBundleParent { get; set; }

        [JsonProperty("orderedQty", NullValueHandling = NullValueHandling.Ignore)]
        public long? OrderedQty { get; set; }

        [JsonProperty("imageUrl")]
        public object ImageUrl { get; set; }

        [JsonProperty("lineType", NullValueHandling = NullValueHandling.Ignore)]
        public string LineType { get; set; }

        [JsonProperty("linePriceInfo", NullValueHandling = NullValueHandling.Ignore)]
        public LinePriceInfo LinePriceInfo { get; set; }

        [JsonProperty("item", NullValueHandling = NullValueHandling.Ignore)]
        public ShipmentItemItem Item { get; set; }

        [JsonProperty("giftFlag", NullValueHandling = NullValueHandling.Ignore)]
        public string GiftFlag { get; set; }

        [JsonProperty("freeShpTyp", NullValueHandling = NullValueHandling.Ignore)]
        public string FreeShpTyp { get; set; }

        [JsonProperty("lineCharges", NullValueHandling = NullValueHandling.Ignore)]
        public List<LineCharge> LineCharges { get; set; }

        [JsonProperty("lineTaxes")]
        public object LineTaxes { get; set; }

        [JsonProperty("discountInfoList")]
        public object DiscountInfoList { get; set; }

        [JsonProperty("orderLineQuantityInfo", NullValueHandling = NullValueHandling.Ignore)]
        public List<OrderLineQuantityInfo> OrderLineQuantityInfo { get; set; }

        [JsonProperty("lineOverallTotals", NullValueHandling = NullValueHandling.Ignore)]
        public LineOverallTotals LineOverallTotals { get; set; }

        [JsonProperty("derivedFromOrder", NullValueHandling = NullValueHandling.Ignore)]
        public EdFromOrder DerivedFromOrder { get; set; }

        [JsonProperty("chainedFromOrder", NullValueHandling = NullValueHandling.Ignore)]
        public EdFromOrder ChainedFromOrder { get; set; }

        [JsonProperty("gscCode", NullValueHandling = NullValueHandling.Ignore)]
        
        public string GscCode { get; set; }

        [JsonProperty("pickUpDate")]
        public object PickUpDate { get; set; }

        [JsonProperty("pickUpTimeRange", NullValueHandling = NullValueHandling.Ignore)]
        public string PickUpTimeRange { get; set; }

        [JsonProperty("memberSlotDate")]
        public object MemberSlotDate { get; set; }

        [JsonProperty("healthCareId")]
        public object HealthCareId { get; set; }

        [JsonProperty("bundleParentLine", NullValueHandling = NullValueHandling.Ignore)]
        public BundleParentLine BundleParentLine { get; set; }

        [JsonProperty("kitCode", NullValueHandling = NullValueHandling.Ignore)]
        public string KitCode { get; set; }

        [JsonProperty("orderLineGiftCardInfoList")]
        public object OrderLineGiftCardInfoList { get; set; }

        [JsonProperty("giftcardActivationAmt", NullValueHandling = NullValueHandling.Ignore)]
        public double? GiftcardActivationAmt { get; set; }

        [JsonProperty("egcRecipientMailID", NullValueHandling = NullValueHandling.Ignore)]
        public string EgcRecipientMailId { get; set; }

        [JsonProperty("shipToAddress", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, string> ShipToAddress { get; set; }

        [JsonProperty("isLineEditable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsLineEditable { get; set; }

        [JsonProperty("isLineCancellable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsLineCancellable { get; set; }

        [JsonProperty("isTireInstall", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsTireInstall { get; set; }

        [JsonProperty("isWarrantyEligible", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsWarrantyEligible { get; set; }

        [JsonProperty("hasParentItemInSameOrder", NullValueHandling = NullValueHandling.Ignore)]
        public bool? HasParentItemInSameOrder { get; set; }

        [JsonProperty("commerceItemId", NullValueHandling = NullValueHandling.Ignore)]
        public string CommerceItemId { get; set; }

        [JsonProperty("parentCommerceItemId", NullValueHandling = NullValueHandling.Ignore)]
        public string ParentCommerceItemId { get; set; }

        [JsonProperty("instructions", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> Instructions { get; set; }

        [JsonProperty("deliveryMethod", NullValueHandling = NullValueHandling.Ignore)]
        public string DeliveryMethod { get; set; }

        [JsonProperty("shippingItemXrefId", NullValueHandling = NullValueHandling.Ignore)]
        public string ShippingItemXrefId { get; set; }

        [JsonProperty("shippingGroupId", NullValueHandling = NullValueHandling.Ignore)]
        public string ShippingGroupId { get; set; }

        [JsonProperty("clubPickDate")]
        public object ClubPickDate { get; set; }

        [JsonProperty("shipmentMethod", NullValueHandling = NullValueHandling.Ignore)]
        public string ShipmentMethod { get; set; }

        [JsonProperty("trackingDetails")]
        public object TrackingDetails { get; set; }

        [JsonProperty("imsOrderLineRSVNList", NullValueHandling = NullValueHandling.Ignore)]
        public List<ImsOrderLineRsvnList> ImsOrderLineRsvnList { get; set; }

        [JsonProperty("shippedQty", NullValueHandling = NullValueHandling.Ignore)]
        public long? ShippedQty { get; set; }
    }

    public partial class BundleParentLine
    {
        [JsonProperty("primeLineNo")]
        public object PrimeLineNo { get; set; }
    }

    public partial class EdFromOrder
    {
        [JsonProperty("orderNo")]
        public object OrderNo { get; set; }

        [JsonProperty("primeLineNo")]
        public object PrimeLineNo { get; set; }
    }

    public partial class ImsOrderLineRsvnList
    {
        [JsonProperty("arriveByDate", NullValueHandling = NullValueHandling.Ignore)]
        public string ArriveByDate { get; set; }

        [JsonProperty("shipNode", NullValueHandling = NullValueHandling.Ignore)]
        
        public string ShipNode { get; set; }

        [JsonProperty("shippingCharge", NullValueHandling = NullValueHandling.Ignore)]
        public string ShippingCharge { get; set; }
    }

    public partial class ShipmentItemItem
    {
        [JsonProperty("itemDesc", NullValueHandling = NullValueHandling.Ignore)]
        public string ItemDesc { get; set; }

        [JsonProperty("itemID", NullValueHandling = NullValueHandling.Ignore)]
        
        public string ItemId { get; set; }

        [JsonProperty("alternateItemId", NullValueHandling = NullValueHandling.Ignore)]
        
        public string AlternateItemId { get; set; }

        [JsonProperty("productLine", NullValueHandling = NullValueHandling.Ignore)]
        
        public string ProductLine { get; set; }

        [JsonProperty("upcCode", NullValueHandling = NullValueHandling.Ignore)]
        public string UpcCode { get; set; }

        [JsonProperty("itemInfo", NullValueHandling = NullValueHandling.Ignore)]
        public ItemInfo ItemInfo { get; set; }

        [JsonProperty("isReturnEligible", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsReturnEligible { get; set; }

        [JsonProperty("returnableQuantity", NullValueHandling = NullValueHandling.Ignore)]
        public string ReturnableQuantity { get; set; }
    }

    public partial class ItemInfo
    {
        [JsonProperty("productId", NullValueHandling = NullValueHandling.Ignore)]
      
        public string ProductId { get; set; }

        [JsonProperty("skuId", NullValueHandling = NullValueHandling.Ignore)]
    
        public string SkuId { get; set; }

        [JsonProperty("productName", NullValueHandling = NullValueHandling.Ignore)]
        public string ProductName { get; set; }

        [JsonProperty("offerName", NullValueHandling = NullValueHandling.Ignore)]
        public string OfferName { get; set; }

        [JsonProperty("imageURL", NullValueHandling = NullValueHandling.Ignore)]
        public string ImageUrl { get; set; }

        [JsonProperty("subscriptionEnabled", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SubscriptionEnabled { get; set; }

        [JsonProperty("inventory", NullValueHandling = NullValueHandling.Ignore)]
        public Inventory Inventory { get; set; }

        [JsonProperty("returnInfo", NullValueHandling = NullValueHandling.Ignore)]
        public ReturnInfo ReturnInfo { get; set; }

        [JsonProperty("seoUrl", NullValueHandling = NullValueHandling.Ignore)]
        public string SeoUrl { get; set; }
    }

    public partial class Inventory
    {
        

        [JsonProperty("inventorySourceNetwork", NullValueHandling = NullValueHandling.Ignore)]
        public string InventorySourceNetwork { get; set; }
    }

    public partial class ReturnInfo
    {
        [JsonProperty("returnLocation", NullValueHandling = NullValueHandling.Ignore)]
        public string ReturnLocation { get; set; }

        [JsonProperty("returnDays", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ReturnDays { get; set; }
    }

    public partial class LineCharge
    {
        [JsonProperty("chargeCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string ChargeCategory { get; set; }

        [JsonProperty("chargeName", NullValueHandling = NullValueHandling.Ignore)]
        public string ChargeName { get; set; }

        [JsonProperty("chargeAmount", NullValueHandling = NullValueHandling.Ignore)]
        public double? ChargeAmount { get; set; }

        [JsonProperty("chargePerUnit", NullValueHandling = NullValueHandling.Ignore)]
        public double? ChargePerUnit { get; set; }

        [JsonProperty("eValue", NullValueHandling = NullValueHandling.Ignore)]
        public EValue EValue { get; set; }

        [JsonProperty("unitDiscount")]
        public object UnitDiscount { get; set; }

        [JsonProperty("promotion", NullValueHandling = NullValueHandling.Ignore)]
        public Promotion Promotion { get; set; }
    }

    public partial class EValue
    {
        [JsonProperty("evalueRedeemedQty")]
        public object EvalueRedeemedQty { get; set; }
    }

    public partial class Promotion
    {
        [JsonProperty("promotionName")]
        public object PromotionName { get; set; }
    }

    public partial class LineOverallTotals
    {
        [JsonProperty("extendedPrice", NullValueHandling = NullValueHandling.Ignore)]
        public double? ExtendedPrice { get; set; }

        [JsonProperty("tax", NullValueHandling = NullValueHandling.Ignore)]
        public long? Tax { get; set; }
    }

    public partial class LinePriceInfo
    {
        [JsonProperty("unitPrice", NullValueHandling = NullValueHandling.Ignore)]
        public double? UnitPrice { get; set; }

        [JsonProperty("lineTotal", NullValueHandling = NullValueHandling.Ignore)]
        public double? LineTotal { get; set; }
    }

    public partial class OrderLineQuantityInfo
    {
        [JsonProperty("statusQty", NullValueHandling = NullValueHandling.Ignore)]
        public long? StatusQty { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("statusDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string StatusDescription { get; set; }
    }

    public partial class OrderInvoice
    {
        [JsonProperty("amountCollected", NullValueHandling = NullValueHandling.Ignore)]
        public double? AmountCollected { get; set; }
    }

    public partial class OrderRelease
    {
        [JsonProperty("shipNodeDetails", NullValueHandling = NullValueHandling.Ignore)]
        public ShipNodeDetails ShipNodeDetails { get; set; }
    }

    public partial class ShipNodeDetails
    {
        [JsonProperty("shipNode", NullValueHandling = NullValueHandling.Ignore)]
        
        public string ShipNode { get; set; }

        [JsonProperty("shipNodeAddress", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, string> ShipNodeAddress { get; set; }
    }

    public partial class PaymentMethodElement
    {
        [JsonProperty("billToAddress", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, string> BillToAddress { get; set; }

        [JsonProperty("displayCreditCardNo", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DisplayCreditCardNo { get; set; }

        [JsonProperty("creditCardName", NullValueHandling = NullValueHandling.Ignore)]
        public string CreditCardName { get; set; }

        [JsonProperty("creditCardType", NullValueHandling = NullValueHandling.Ignore)]
        public string CreditCardType { get; set; }

        [JsonProperty("paymentType", NullValueHandling = NullValueHandling.Ignore)]
        public string PaymentType { get; set; }

        [JsonProperty("paymentKey", NullValueHandling = NullValueHandling.Ignore)]
        public string PaymentKey { get; set; }

        [JsonProperty("totalAuthorized", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalAuthorized { get; set; }

        [JsonProperty("totalCharged", NullValueHandling = NullValueHandling.Ignore)]
        public double? TotalCharged { get; set; }

        [JsonProperty("totalRefundedAmount", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalRefundedAmount { get; set; }

        [JsonProperty("cashbackAmount")]
        public object CashbackAmount { get; set; }

        [JsonProperty("paymentReference3", NullValueHandling = NullValueHandling.Ignore)]
        public string PaymentReference3 { get; set; }

        [JsonProperty("maxChargeLimit", NullValueHandling = NullValueHandling.Ignore)]
        public double? MaxChargeLimit { get; set; }
    }

    public partial class PriceInfo
    {
        [JsonProperty("currency", NullValueHandling = NullValueHandling.Ignore)]
        public string Currency { get; set; }
    }

    public partial class Shipment
    {
        [JsonProperty("shipmentLines", NullValueHandling = NullValueHandling.Ignore)]
        public List<ShipmentLine> ShipmentLines { get; set; }

        [JsonProperty("trackingDetails", NullValueHandling = NullValueHandling.Ignore)]
        public List<TrackingDetail> TrackingDetails { get; set; }

        [JsonProperty("containers", NullValueHandling = NullValueHandling.Ignore)]
        public List<Container> Containers { get; set; }

        [JsonProperty("scac", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? Scac { get; set; }
    }

    public partial class Container
    {
        [JsonProperty("trackingNo", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingNo { get; set; }

        [JsonProperty("containerDetails", NullValueHandling = NullValueHandling.Ignore)]
        public List<ContainerDetail> ContainerDetails { get; set; }
    }

    public partial class ContainerDetail
    {
        [JsonProperty("shipmentLines", NullValueHandling = NullValueHandling.Ignore)]
        public List<ShipmentLine> ShipmentLines { get; set; }
    }

    public partial class ShipmentLine
    {
        [JsonProperty("primeLineNo", NullValueHandling = NullValueHandling.Ignore)]
        public long? PrimeLineNo { get; set; }

        [JsonProperty("quantity", NullValueHandling = NullValueHandling.Ignore)]
        public long? Quantity { get; set; }

        [JsonProperty("documentType", NullValueHandling = NullValueHandling.Ignore)]
        public string DocumentType { get; set; }

        [JsonProperty("orderNo", NullValueHandling = NullValueHandling.Ignore)]
        public string OrderNo { get; set; }

        [JsonProperty("salesOrderPrimeLineNo", NullValueHandling = NullValueHandling.Ignore)]
        public long? SalesOrderPrimeLineNo { get; set; }
    }

    public partial class TrackingDetail
    {
        [JsonProperty("deliveredDate", NullValueHandling = NullValueHandling.Ignore)]
        public string DeliveredDate { get; set; }

        [JsonProperty("milestoneDesc", NullValueHandling = NullValueHandling.Ignore)]
        public string MilestoneDesc { get; set; }

        [JsonProperty("expectedDeliveryDate", NullValueHandling = NullValueHandling.Ignore)]
        public string ExpectedDeliveryDate { get; set; }

        [JsonProperty("trackingNo", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingNo { get; set; }

        [JsonProperty("trackingId")]
        public object TrackingId { get; set; }
    }

    public partial class SamsTrackingOrderDto
    {
        public static SamsTrackingOrderDto FromJson(string json) => JsonConvert.DeserializeObject<SamsTrackingOrderDto>(json, Converter.Settings);
    }

    
}
