// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using OrderPlacer.SamsClub.Models;
//
//    var samsUserCartsDto = SamsUserCartsDto.FromJson(jsonString);

namespace OrderPlacer.SamsClub.Models
{
    using Newtonsoft.Json;
    using System;

    public partial class SamsUserCartsDto
    {
        [JsonProperty("metadata", NullValueHandling = NullValueHandling.Ignore)]
        public Metadata Metadata { get; set; }

        [JsonProperty("payload", NullValueHandling = NullValueHandling.Ignore)]
        public UserCartPayload Payload { get; set; }
    }



    public partial class UserCartPayload
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("clubId", NullValueHandling = NullValueHandling.Ignore)]
        public long? ClubId { get; set; }

        [JsonProperty("itemCount", NullValueHandling = NullValueHandling.Ignore)]
        public long? ItemCount { get; set; }

        [JsonProperty("postalCode", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? PostalCode { get; set; }

        [JsonProperty("lastModified", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? LastModified { get; set; }

        [JsonProperty("lineItems", NullValueHandling = NullValueHandling.Ignore)]
        public LineItems LineItems { get; set; }

        [JsonProperty("totals", NullValueHandling = NullValueHandling.Ignore)]
        public Totals Totals { get; set; }

        [JsonProperty("signInRequired", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SignInRequired { get; set; }

        [JsonProperty("cartType", NullValueHandling = NullValueHandling.Ignore)]
        public string CartType { get; set; }
    }




    public partial class SamsUserCartsDto
    {
        public static SamsUserCartsDto FromJson(string json) => JsonConvert.DeserializeObject<SamsUserCartsDto>(json, Converter.Settings);
    }



}
