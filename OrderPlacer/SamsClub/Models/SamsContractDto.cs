// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using OrderPlacer.SamsClub.Models;
//
//    var samsContactDto = SamsContactDto.FromJson(jsonString);

namespace OrderPlacer.SamsClub.Models
{
    using Newtonsoft.Json;
    using System;
    using System.Collections.Generic;


    // <auto-generated />
    //
    // To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
    //
    //    using OrderPlacer.SamsClub.Models;
    //
    //    var addSamsContactDto = AddSamsContactDto.FromJson(jsonString);


    public partial class AddSamsContractDto
    {
        [JsonProperty("payload", NullValueHandling = NullValueHandling.Ignore)]
        public ContractPayload Payload { get; set; }
    }

    public partial class ContractPayload
    {
        [JsonProperty("cartId", NullValueHandling = NullValueHandling.Ignore)]
        public string CartId { get; set; }

        [JsonProperty("addressId", NullValueHandling = NullValueHandling.Ignore)]
        public string AddressId { get; set; }
    }

    public partial class AddSamsContractDto
    {
        public static AddSamsContractDto FromJson(string json) => JsonConvert.DeserializeObject<AddSamsContractDto>(json, Converter.Settings);
    }








    public partial class SamsContactDto
    {
        [JsonProperty("metadata", NullValueHandling = NullValueHandling.Ignore)]
        public Metadata Metadata { get; set; }

        [JsonProperty("payload", NullValueHandling = NullValueHandling.Ignore)]
        public SamsContractPayload Payload { get; set; }

        [JsonProperty("errors", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> Errors { get; set; }
    }

    public partial class Metadata
    {
        [JsonProperty("slots", NullValueHandling = NullValueHandling.Ignore)]
        public List<Slot> Slots { get; set; }


    }



    public partial class Slot
    {
        [JsonProperty("startTime", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? StartTime { get; set; }

        [JsonProperty("endTime", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? EndTime { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("slotId", NullValueHandling = NullValueHandling.Ignore)]
        public string SlotId { get; set; }

        [JsonProperty("date", NullValueHandling = NullValueHandling.Ignore)]
        public string Date { get; set; }

        [JsonProperty("range", NullValueHandling = NullValueHandling.Ignore)]
        public string Range { get; set; }
    }
    public partial class SamsContractPayload
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("cartId", NullValueHandling = NullValueHandling.Ignore)]
        public string CartId { get; set; }

        [JsonProperty("clubId", NullValueHandling = NullValueHandling.Ignore)]
        public long? ClubId { get; set; }

        [JsonProperty("fulfillmentGroups", NullValueHandling = NullValueHandling.Ignore)]
        public List<FulfillmentGroup> FulfillmentGroups { get; set; }



        [JsonProperty("payments", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> Payments { get; set; }

        [JsonProperty("giftCards", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> GiftCards { get; set; }

        [JsonProperty("cvvRequired", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CvvRequired { get; set; }

        [JsonProperty("totals", NullValueHandling = NullValueHandling.Ignore)]
        public Totals Totals { get; set; }

        [JsonProperty("prepaySummary", NullValueHandling = NullValueHandling.Ignore)]
        public PrepaySummary PrepaySummary { get; set; }

        [JsonProperty("postpaySummary", NullValueHandling = NullValueHandling.Ignore)]
        public PostpaySummary PostpaySummary { get; set; }

        [JsonProperty("nonEligiblePromotions", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> NonEligiblePromotions { get; set; }

        [JsonProperty("eligiblePromotions", NullValueHandling = NullValueHandling.Ignore)]
        public List<EligiblePromotion> EligiblePromotions { get; set; }

        [JsonProperty("exclusionItemPresent", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ExclusionItemPresent { get; set; }
    }

    public partial class EligiblePromotion
    {
        [JsonProperty("promotionId", NullValueHandling = NullValueHandling.Ignore)]
        public string PromotionId { get; set; }

        [JsonProperty("promotionType", NullValueHandling = NullValueHandling.Ignore)]
        public string PromotionType { get; set; }

        [JsonProperty("promoMessage", NullValueHandling = NullValueHandling.Ignore)]
        public string PromoMessage { get; set; }

        [JsonProperty("amount", NullValueHandling = NullValueHandling.Ignore)]
        public long? Amount { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("autoApply", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AutoApply { get; set; }

        [JsonProperty("couponBased", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CouponBased { get; set; }
    }

    public partial class FulfillmentGroup
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("lineItemIds", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> LineItemIds { get; set; }

        [JsonProperty("fulfillmentType", NullValueHandling = NullValueHandling.Ignore)]
        public string FulfillmentType { get; set; }

        [JsonProperty("shippingAddress", NullValueHandling = NullValueHandling.Ignore)]
        public ShippingAddress ShippingAddress { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }
    }

    public partial class ShippingAddress
    {
        [JsonProperty("addressId", NullValueHandling = NullValueHandling.Ignore)]
        public string AddressId { get; set; }

        [JsonProperty("addressLineOne", NullValueHandling = NullValueHandling.Ignore)]
        public string AddressLineOne { get; set; }

        [JsonProperty("city", NullValueHandling = NullValueHandling.Ignore)]
        public string City { get; set; }

        [JsonProperty("country", NullValueHandling = NullValueHandling.Ignore)]
        public string Country { get; set; }

        [JsonProperty("postalCode", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? PostalCode { get; set; }

        [JsonProperty("state", NullValueHandling = NullValueHandling.Ignore)]
        public string State { get; set; }

        [JsonProperty("addressType", NullValueHandling = NullValueHandling.Ignore)]
        public string AddressType { get; set; }

        [JsonProperty("firstName", NullValueHandling = NullValueHandling.Ignore)]
        public string FirstName { get; set; }

        [JsonProperty("lastName", NullValueHandling = NullValueHandling.Ignore)]
        public string LastName { get; set; }

        [JsonProperty("phone", NullValueHandling = NullValueHandling.Ignore)]
        public string Phone { get; set; }

        [JsonProperty("dockDoorPresent", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DockDoorPresent { get; set; }
    }





    public partial class FulfillmentMethod
    {
        [JsonProperty("method", NullValueHandling = NullValueHandling.Ignore)]
        public string Method { get; set; }

        [JsonProperty("date", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Date { get; set; }

        [JsonProperty("cost", NullValueHandling = NullValueHandling.Ignore)]
        public long? Cost { get; set; }

        [JsonProperty("selected", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Selected { get; set; }
    }

    public partial class PriceInfo
    {


        [JsonProperty("salesTax", NullValueHandling = NullValueHandling.Ignore)]
        public double? SalesTax { get; set; }


    }

    public partial class DiscountInfo
    {
        [JsonProperty("promotionId", NullValueHandling = NullValueHandling.Ignore)]
        public string PromotionId { get; set; }

        [JsonProperty("unitPriceDiscount", NullValueHandling = NullValueHandling.Ignore)]
        public long? UnitPriceDiscount { get; set; }

        [JsonProperty("unitShipPriceDiscount", NullValueHandling = NullValueHandling.Ignore)]
        public long? UnitShipPriceDiscount { get; set; }

        [JsonProperty("unitSurchargeDiscount", NullValueHandling = NullValueHandling.Ignore)]
        public long? UnitSurchargeDiscount { get; set; }

        [JsonProperty("unitDiscount", NullValueHandling = NullValueHandling.Ignore)]
        public long? UnitDiscount { get; set; }

        [JsonProperty("discountedUnitCount", NullValueHandling = NullValueHandling.Ignore)]
        public long? DiscountedUnitCount { get; set; }

        [JsonProperty("message", NullValueHandling = NullValueHandling.Ignore)]
        public string Message { get; set; }

        [JsonProperty("promotionType", NullValueHandling = NullValueHandling.Ignore)]
        public string PromotionType { get; set; }

        [JsonProperty("endDate", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? EndDate { get; set; }

        [JsonProperty("promotionSource", NullValueHandling = NullValueHandling.Ignore)]
        public string PromotionSource { get; set; }

        [JsonProperty("totalPriceDiscount", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalPriceDiscount { get; set; }

        [JsonProperty("totalDiscount", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalDiscount { get; set; }

        [JsonProperty("savingsAmount", NullValueHandling = NullValueHandling.Ignore)]
        public long? SavingsAmount { get; set; }
    }



    public partial class PostpaySummary
    {
        [JsonProperty("totalItems", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalItems { get; set; }

        [JsonProperty("total", NullValueHandling = NullValueHandling.Ignore)]
        public long? Total { get; set; }

        [JsonProperty("subTotal", NullValueHandling = NullValueHandling.Ignore)]
        public long? SubTotal { get; set; }

        [JsonProperty("salesTax", NullValueHandling = NullValueHandling.Ignore)]
        public long? SalesTax { get; set; }

        [JsonProperty("savings", NullValueHandling = NullValueHandling.Ignore)]
        public long? Savings { get; set; }

        [JsonProperty("productTaxBreakdown", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> ProductTaxBreakdown { get; set; }
    }

    public partial class PrepaySummary
    {
        [JsonProperty("totalItems", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalItems { get; set; }

        [JsonProperty("total", NullValueHandling = NullValueHandling.Ignore)]
        public double? Total { get; set; }

        [JsonProperty("subTotal", NullValueHandling = NullValueHandling.Ignore)]
        public double? SubTotal { get; set; }

        [JsonProperty("salesTax", NullValueHandling = NullValueHandling.Ignore)]
        public double? SalesTax { get; set; }

        [JsonProperty("savings", NullValueHandling = NullValueHandling.Ignore)]
        public long? Savings { get; set; }

        [JsonProperty("shippingAmount", NullValueHandling = NullValueHandling.Ignore)]
        public long? ShippingAmount { get; set; }

        [JsonProperty("giftWrapTotal", NullValueHandling = NullValueHandling.Ignore)]
        public long? GiftWrapTotal { get; set; }

        [JsonProperty("productTaxBreakdown", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> ProductTaxBreakdown { get; set; }

        [JsonProperty("deliveryAmount", NullValueHandling = NullValueHandling.Ignore)]
        public long? DeliveryAmount { get; set; }

        [JsonProperty("pickupAmount", NullValueHandling = NullValueHandling.Ignore)]
        public long? PickupAmount { get; set; }

        [JsonProperty("finalDeliveryAmount", NullValueHandling = NullValueHandling.Ignore)]
        public long? FinalDeliveryAmount { get; set; }

        [JsonProperty("finalPickupAmount", NullValueHandling = NullValueHandling.Ignore)]
        public long? FinalPickupAmount { get; set; }

        [JsonProperty("tipAmount", NullValueHandling = NullValueHandling.Ignore)]
        public long? TipAmount { get; set; }
    }



    public partial class DiscountBreakup
    {
    }

    public partial class SamsContactDto
    {
        public static SamsContactDto FromJson(string json) => JsonConvert.DeserializeObject<SamsContactDto>(json, Converter.Settings);
    }






}


