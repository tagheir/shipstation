// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using OrderPlacer.SamsClub.Models;
//
//    var samsPropertySearchResponseDto = SamsPropertySearchResponseDto.FromJson(jsonString);

namespace OrderPlacer.SamsClub.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using OrderPlacer.Bjs.Models;

    public partial class SamsPropertySearchResponseDto
    {
        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("payload", NullValueHandling = NullValueHandling.Ignore)]
        public ProductSearchPayload Payload { get; set; }
    }

    public partial class ProductSearchPayload
    {
        [JsonProperty("isCached", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsCached { get; set; }

        [JsonProperty("sortPropertyList", NullValueHandling = NullValueHandling.Ignore)]
        public List<SelectedSortProperty> SortPropertyList { get; set; }

        [JsonProperty("showOtherRefinements", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ShowOtherRefinements { get; set; }

        [JsonProperty("currentPage", NullValueHandling = NullValueHandling.Ignore)]
        public long? CurrentPage { get; set; }

        [JsonProperty("totalRecords", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalRecords { get; set; }

        [JsonProperty("records", NullValueHandling = NullValueHandling.Ignore)]
        public List<Record> Records { get; set; }

        [JsonProperty("numberOfRecords", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumberOfRecords { get; set; }

        [JsonProperty("numberOfRecordsRequested", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumberOfRecordsRequested { get; set; }

        [JsonProperty("offset", NullValueHandling = NullValueHandling.Ignore)]
        public long? Offset { get; set; }

        [JsonProperty("searchKeyword", NullValueHandling = NullValueHandling.Ignore)]
        public string SearchKeyword { get; set; }

        [JsonProperty("selectedSortProperty", NullValueHandling = NullValueHandling.Ignore)]
        public SelectedSortProperty SelectedSortProperty { get; set; }

        [JsonProperty("feLog", NullValueHandling = NullValueHandling.Ignore)]
        public string FeLog { get; set; }

        [JsonProperty("selectedRefinements", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> SelectedRefinements { get; set; }

        [JsonProperty("selectedCategories", NullValueHandling = NullValueHandling.Ignore)]
        public SelectedCategories SelectedCategories { get; set; }

        [JsonProperty("additionalResults", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> AdditionalResults { get; set; }

        [JsonProperty("suggestions", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> Suggestions { get; set; }

        [JsonProperty("filtersDelimiter", NullValueHandling = NullValueHandling.Ignore)]
        public string FiltersDelimiter { get; set; }

        [JsonProperty("filterValuesDelimiter", NullValueHandling = NullValueHandling.Ignore)]
        public string FilterValuesDelimiter { get; set; }

        [JsonProperty("dimensionGroups", NullValueHandling = NullValueHandling.Ignore)]
        public List<DimensionGroup> DimensionGroups { get; set; }
    }

    public partial class DimensionGroup
    {
        [JsonProperty("groupId", NullValueHandling = NullValueHandling.Ignore)]
        public string GroupId { get; set; }

        [JsonProperty("groupName", NullValueHandling = NullValueHandling.Ignore)]
        public string GroupName { get; set; }

        [JsonProperty("multiSelect", NullValueHandling = NullValueHandling.Ignore)]
        public bool? MultiSelect { get; set; }

        [JsonProperty("urlPart", NullValueHandling = NullValueHandling.Ignore)]
        public string UrlPart { get; set; }

        [JsonProperty("dimentionList", NullValueHandling = NullValueHandling.Ignore)]
        public List<DimentionList> DimentionList { get; set; }

        [JsonProperty("actualName", NullValueHandling = NullValueHandling.Ignore)]
        public string ActualName { get; set; }
    }

    public partial class DimentionList
    {
        [JsonProperty("count", NullValueHandling = NullValueHandling.Ignore)]
        public long? Count { get; set; }

        [JsonProperty("value", NullValueHandling = NullValueHandling.Ignore)]
        public string Value { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("categoryId", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? CategoryId { get; set; }

        [JsonProperty("altQuery", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? AltQuery { get; set; }

        [JsonProperty("urlPart", NullValueHandling = NullValueHandling.Ignore)]
        public string UrlPart { get; set; }

        [JsonProperty("urlParameter", NullValueHandling = NullValueHandling.Ignore)]
        public string UrlParameter { get; set; }

        [JsonProperty("selected", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Selected { get; set; }
    }

    public partial class Record
    {
        [JsonProperty("productId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProductId { get; set; }

        [JsonProperty("productType", NullValueHandling = NullValueHandling.Ignore)]
        public string ProductType { get; set; }

        [JsonProperty("productBadge", NullValueHandling = NullValueHandling.Ignore)]
        public ProductBadge ProductBadge { get; set; }

        [JsonProperty("category", NullValueHandling = NullValueHandling.Ignore)]
        public Category Category { get; set; }

        [JsonProperty("searchAndSeo", NullValueHandling = NullValueHandling.Ignore)]
        public SearchAndSeo SearchAndSeo { get; set; }

        [JsonProperty("shippingOption", NullValueHandling = NullValueHandling.Ignore)]
        public RecordShippingOption ShippingOption { get; set; }

        [JsonProperty("manufacturingInfo", NullValueHandling = NullValueHandling.Ignore)]
        public RecordManufacturingInfo ManufacturingInfo { get; set; }

        [JsonProperty("descriptors", NullValueHandling = NullValueHandling.Ignore)]
        public Descriptors Descriptors { get; set; }

        [JsonProperty("reviewsAndRatings", NullValueHandling = NullValueHandling.Ignore)]
        public ReviewsAndRatings ReviewsAndRatings { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("skus", NullValueHandling = NullValueHandling.Ignore)]
        public List<Skus> Skus { get; set; }

        [JsonProperty("expiresAt", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? ExpiresAt { get; set; }

        [JsonProperty("cached", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Cached { get; set; }

        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("prodProperties", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ProdProperties { get; set; }

        [JsonProperty("legacyProductType", NullValueHandling = NullValueHandling.Ignore)]
        public string LegacyProductType { get; set; }

        [JsonProperty("parentCategories", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(DecodeArrayConverter))]
        public List<long> ParentCategories { get; set; }

        [JsonProperty("lastModifiedAt", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? LastModifiedAt { get; set; }

        [JsonProperty("transformed", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Transformed { get; set; }

        [JsonProperty("originalIndex", NullValueHandling = NullValueHandling.Ignore)]
        public long? OriginalIndex { get; set; }
    }

    public partial class Category
    {
        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("categoryId", NullValueHandling = NullValueHandling.Ignore)]
        
        public string? CategoryId { get; set; }
    }

    public partial class Descriptors
    {
        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }
    }

    public partial class RecordManufacturingInfo
    {
        [JsonProperty("model", NullValueHandling = NullValueHandling.Ignore)]
        
        public string? Model { get; set; }

        [JsonProperty("brand", NullValueHandling = NullValueHandling.Ignore)]
        public string Brand { get; set; }
    }

    public partial class ProductBadge
    {
        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("backgroundColor", NullValueHandling = NullValueHandling.Ignore)]
        public string BackgroundColor { get; set; }

        [JsonProperty("textColor", NullValueHandling = NullValueHandling.Ignore)]
        public string TextColor { get; set; }
    }

    public partial class ReviewsAndRatings
    {
        [JsonProperty("numReviews", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumReviews { get; set; }

        [JsonProperty("avgRating", NullValueHandling = NullValueHandling.Ignore)]
        public double? AvgRating { get; set; }

        [JsonProperty("isEligibleForAskAndAnswer", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsEligibleForAskAndAnswer { get; set; }
    }

    public partial class SearchAndSeo
    {
        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public string Url { get; set; }
    }

    public partial class RecordShippingOption
    {
        [JsonProperty("info", NullValueHandling = NullValueHandling.Ignore)]
        public string Info { get; set; }
    }

    public partial class Skus
    {
        [JsonProperty("skuId", NullValueHandling = NullValueHandling.Ignore)]
        public string SkuId { get; set; }

        [JsonProperty("productId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProductId { get; set; }

        [JsonProperty("memberLimit", NullValueHandling = NullValueHandling.Ignore)]
        public MemberLimit MemberLimit { get; set; }

        [JsonProperty("descriptors", NullValueHandling = NullValueHandling.Ignore)]
        public Descriptors Descriptors { get; set; }

        [JsonProperty("assets", NullValueHandling = NullValueHandling.Ignore)]
        public Assets Assets { get; set; }

        [JsonProperty("shippingOption", NullValueHandling = NullValueHandling.Ignore)]
        public SkusShippingOption ShippingOption { get; set; }
        [JsonProperty("clubOffer", NullValueHandling = NullValueHandling.Ignore)]
        public OnlineOffer ClubOffer { get; set; }

        [JsonProperty("onlineOffer", NullValueHandling = NullValueHandling.Ignore)]
        public OnlineOffer OnlineOffer { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("fulfillmentChannels", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> FulfillmentChannels { get; set; }

        [JsonProperty("merchandiseCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string? MerchandiseCategory { get; set; }

        [JsonProperty("merchandiseSubCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string? MerchandiseSubCategory { get; set; }

        [JsonProperty("manufacturingInfo", NullValueHandling = NullValueHandling.Ignore)]
        public SkusManufacturingInfo ManufacturingInfo { get; set; }

        [JsonProperty("shippingMethods", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ShippingMethods { get; set; }
    }

    public partial class Assets
    {
        [JsonProperty("image", NullValueHandling = NullValueHandling.Ignore)]
        public string Image { get; set; }
    }

    public partial class SkusManufacturingInfo
    {
        [JsonProperty("model", NullValueHandling = NullValueHandling.Ignore)]
      
        public string? Model { get; set; }
    }

    public partial class MemberLimit
    {
        [JsonProperty("limitStartDate", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? LimitStartDate { get; set; }
    }

    public partial class OnlineOffer
    {
        [JsonProperty("clubId", NullValueHandling = NullValueHandling.Ignore)]
        public long? ClubId { get; set; }

        [JsonProperty("itemNumber", NullValueHandling = NullValueHandling.Ignore)]
        
        public long? ItemNumber { get; set; }

        [JsonProperty("gtin", NullValueHandling = NullValueHandling.Ignore)]
        public string Gtin { get; set; }

        [JsonProperty("offerId", NullValueHandling = NullValueHandling.Ignore)]
        public string OfferId { get; set; }

        [JsonProperty("skuId", NullValueHandling = NullValueHandling.Ignore)]
        public string SkuId { get; set; }

        [JsonProperty("offerStatus", NullValueHandling = NullValueHandling.Ignore)]
        public string OfferStatus { get; set; }

        [JsonProperty("isUnitPriceItem", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsUnitPriceItem { get; set; }

        [JsonProperty("sellQtyUnitofMeasure", NullValueHandling = NullValueHandling.Ignore)]
        public string SellQtyUnitofMeasure { get; set; }

        [JsonProperty("unitofMeasureUnitPrice", NullValueHandling = NullValueHandling.Ignore)]
        public string UnitofMeasureUnitPrice { get; set; }

        [JsonProperty("offerLogistics", NullValueHandling = NullValueHandling.Ignore)]
        public OfferLogistics OfferLogistics { get; set; }

        [JsonProperty("inventory", NullValueHandling = NullValueHandling.Ignore)]
        public Inventory Inventory { get; set; }
        [JsonProperty("minQuantity", NullValueHandling = NullValueHandling.Ignore)]
        public long? MinQuantity { get; set; }

        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("price", NullValueHandling = NullValueHandling.Ignore)]
        public Price Price { get; set; }

        [JsonProperty("productId", NullValueHandling = NullValueHandling.Ignore)]
        public string ProductId { get; set; }

        [JsonProperty("onlineOfferProperties", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> OnlineOfferProperties { get; set; }

        [JsonProperty("inventorySourceNetwork", NullValueHandling = NullValueHandling.Ignore)]
        public string InventorySourceNetwork { get; set; }

        [JsonProperty("productBadge", NullValueHandling = NullValueHandling.Ignore)]
        public ProductBadge ProductBadge { get; set; }
    }

    public partial class Inventory
    {
        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("availableToSellQuantity", NullValueHandling = NullValueHandling.Ignore)]
        public long? AvailableToSellQuantity { get; set; }

        [JsonProperty("qtyLeft", NullValueHandling = NullValueHandling.Ignore)]
        public long? QtyLeft { get; set; }

        [JsonProperty("qtySold", NullValueHandling = NullValueHandling.Ignore)]
        public long? QtySold { get; set; }


    }

    public partial class OfferLogistics
    {
        [JsonProperty("packSizeUnitPrice", NullValueHandling = NullValueHandling.Ignore)]
        public long? PackSizeUnitPrice { get; set; }
    }

    public partial class Price
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("startPrice", NullValueHandling = NullValueHandling.Ignore)]
        public FinalPriceClass StartPrice { get; set; }

        [JsonProperty("finalPrice", NullValueHandling = NullValueHandling.Ignore)]
        public FinalPriceClass FinalPrice { get; set; }

        [JsonProperty("unitPrice", NullValueHandling = NullValueHandling.Ignore)]
        public FinalPriceClass UnitPrice { get; set; }

        [JsonProperty("savings", NullValueHandling = NullValueHandling.Ignore)]
        public Savings Savings { get; set; }

        [JsonProperty("priceDisplayOption", NullValueHandling = NullValueHandling.Ignore)]
        public string PriceDisplayOption { get; set; }

        [JsonProperty("priceStatus", NullValueHandling = NullValueHandling.Ignore)]
        public string PriceStatus { get; set; }
    }

    public partial class FinalPriceClass
    {
        [JsonProperty("amount", NullValueHandling = NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [JsonProperty("currency", NullValueHandling = NullValueHandling.Ignore)]
        public string Currency { get; set; }
    }

    public partial class Savings
    {
        [JsonProperty("memberPromotions", NullValueHandling = NullValueHandling.Ignore)]
        public List<MemberPromotion> MemberPromotions { get; set; }

        [JsonProperty("savingsAmount", NullValueHandling = NullValueHandling.Ignore)]
        public long? SavingsAmount { get; set; }

        [JsonProperty("startDate", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? StartDate { get; set; }

        [JsonProperty("endDate", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? EndDate { get; set; }
    }

    public partial class MemberPromotion
    {
        [JsonProperty("popupMessage", NullValueHandling = NullValueHandling.Ignore)]
        public string PopupMessage { get; set; }

        [JsonProperty("ipmMessage", NullValueHandling = NullValueHandling.Ignore)]
        public IpmMessage IpmMessage { get; set; }

        [JsonProperty("shortMessage", NullValueHandling = NullValueHandling.Ignore)]
        public string ShortMessage { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("minCorePurchaseQt", NullValueHandling = NullValueHandling.Ignore)]
        public long? MinCorePurchaseQt { get; set; }

        [JsonProperty("couponValue", NullValueHandling = NullValueHandling.Ignore)]
        public string? CouponValue { get; set; }

        [JsonProperty("startDate", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? StartDate { get; set; }

        [JsonProperty("endDate", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? EndDate { get; set; }

        [JsonProperty("longMessage", NullValueHandling = NullValueHandling.Ignore)]
        public string LongMessage { get; set; }
    }

    public partial class IpmMessage
    {
        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public string Text { get; set; }

        [JsonProperty("price_to_show", NullValueHandling = NullValueHandling.Ignore)]
        public string PriceToShow { get; set; }
    }

    public partial class SkusShippingOption
    {
        [JsonProperty("info", NullValueHandling = NullValueHandling.Ignore)]
        
        public string? Info { get; set; }

        [JsonProperty("costType", NullValueHandling = NullValueHandling.Ignore)]
        public string CostType { get; set; }

        [JsonProperty("flag", NullValueHandling = NullValueHandling.Ignore)]
        public string Flag { get; set; }
    }

    public partial class SelectedCategories
    {
        [JsonProperty("multiSelect", NullValueHandling = NullValueHandling.Ignore)]
        public bool? MultiSelect { get; set; }

        [JsonProperty("collapsed", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Collapsed { get; set; }

        [JsonProperty("showMore", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ShowMore { get; set; }
    }

    public partial class SelectedSortProperty
    {
        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("order", NullValueHandling = NullValueHandling.Ignore)]
        public string Order { get; set; }

        [JsonProperty("isActive", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsActive { get; set; }
    }

    public partial class SamsPropertySearchResponseDto
    {
        public static SamsPropertySearchResponseDto FromJson(string json) => JsonConvert.DeserializeObject<SamsPropertySearchResponseDto>(json, Converter.Settings);
    }





}
