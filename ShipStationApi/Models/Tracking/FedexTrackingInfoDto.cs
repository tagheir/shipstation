// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ShipStationApi.Models.Tracking;
//
//    var fedexTrackingInfoDto = FedexTrackingInfoDto.FromJson(jsonString);

namespace ShipStationApi.Models.Tracking
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class FedexTrackingInfoDto
    {
        [JsonProperty("transactionId", NullValueHandling = NullValueHandling.Ignore)]
        public string TransactionId { get; set; }

        [JsonProperty("output", NullValueHandling = NullValueHandling.Ignore)]
        public Output Output { get; set; }
    }

    public partial class Output
    {
        [JsonProperty("packages", NullValueHandling = NullValueHandling.Ignore)]
        public List<Package> Packages { get; set; }

        [JsonProperty("passedLoggedInCheck", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PassedLoggedInCheck { get; set; }
    }

    public partial class Package
    {
        [JsonProperty("delayDetail", NullValueHandling = NullValueHandling.Ignore)]
        public DelayDetail DelayDetail { get; set; }

        [JsonProperty("trackingNbr", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingNbr { get; set; }

        [JsonProperty("trackingQualifier", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingQualifier { get; set; }

        [JsonProperty("trackingCarrierCd", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingCarrierCd { get; set; }

        [JsonProperty("trackingCarrierDesc", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingCarrierDesc { get; set; }

        [JsonProperty("displayTrackingNbr", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayTrackingNbr { get; set; }

        [JsonProperty("shipperCmpnyName", NullValueHandling = NullValueHandling.Ignore)]
        public string ShipperCmpnyName { get; set; }

        [JsonProperty("shipperName", NullValueHandling = NullValueHandling.Ignore)]
        public string ShipperName { get; set; }

        [JsonProperty("shipperAddress", NullValueHandling = NullValueHandling.Ignore)]
        public Address ShipperAddress { get; set; }

        [JsonProperty("shipperPhoneNbr", NullValueHandling = NullValueHandling.Ignore)]
        public string ShipperPhoneNbr { get; set; }

        [JsonProperty("shippedBy", NullValueHandling = NullValueHandling.Ignore)]
        public string ShippedBy { get; set; }

        [JsonProperty("recipientCmpnyName", NullValueHandling = NullValueHandling.Ignore)]
        public string RecipientCmpnyName { get; set; }

        [JsonProperty("recipientName", NullValueHandling = NullValueHandling.Ignore)]
        public string RecipientName { get; set; }

        [JsonProperty("recipientAddress", NullValueHandling = NullValueHandling.Ignore)]
        public Address RecipientAddress { get; set; }

        [JsonProperty("recipientPhoneNbr", NullValueHandling = NullValueHandling.Ignore)]
        public string RecipientPhoneNbr { get; set; }

        [JsonProperty("shippedTo", NullValueHandling = NullValueHandling.Ignore)]
        public string ShippedTo { get; set; }

        [JsonProperty("keyStatus", NullValueHandling = NullValueHandling.Ignore)]
        public string KeyStatus { get; set; }

        [JsonProperty("keyStatusCD", NullValueHandling = NullValueHandling.Ignore)]
        public string KeyStatusCd { get; set; }

        [JsonProperty("lastScanStatus", NullValueHandling = NullValueHandling.Ignore)]
        public string LastScanStatus { get; set; }

        [JsonProperty("lastScanDateTime", NullValueHandling = NullValueHandling.Ignore)]
        public string LastScanDateTime { get; set; }

        [JsonProperty("receivedByNm", NullValueHandling = NullValueHandling.Ignore)]
        public string ReceivedByNm { get; set; }

        [JsonProperty("subStatus", NullValueHandling = NullValueHandling.Ignore)]
        public string SubStatus { get; set; }

        [JsonProperty("mainStatus", NullValueHandling = NullValueHandling.Ignore)]
        public string MainStatus { get; set; }

        [JsonProperty("statusBarCD", NullValueHandling = NullValueHandling.Ignore)]
        public string StatusBarCd { get; set; }

        [JsonProperty("shortStatus", NullValueHandling = NullValueHandling.Ignore)]
        public string ShortStatus { get; set; }

        [JsonProperty("shortStatusCD", NullValueHandling = NullValueHandling.Ignore)]
        public string ShortStatusCd { get; set; }

        [JsonProperty("statusLocationAddress", NullValueHandling = NullValueHandling.Ignore)]
        public Address StatusLocationAddress { get; set; }

        [JsonProperty("statusWithDetails", NullValueHandling = NullValueHandling.Ignore)]
        public string StatusWithDetails { get; set; }

        [JsonProperty("halType", NullValueHandling = NullValueHandling.Ignore)]
        public string HalType { get; set; }

        [JsonProperty("halCmpnyName", NullValueHandling = NullValueHandling.Ignore)]
        public string HalCmpnyName { get; set; }

        [JsonProperty("shipDt", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? ShipDt { get; set; }

        [JsonProperty("displayShipDt", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayShipDt { get; set; }

        [JsonProperty("displayShipTm", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayShipTm { get; set; }

        [JsonProperty("displayShipDateTime", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayShipDateTime { get; set; }

        [JsonProperty("pickupDt", NullValueHandling = NullValueHandling.Ignore)]
        public string PickupDt { get; set; }

        [JsonProperty("displayPickupDt", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayPickupDt { get; set; }

        [JsonProperty("displayPickupTm", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayPickupTm { get; set; }

        [JsonProperty("displayPickupDateTime", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayPickupDateTime { get; set; }

        [JsonProperty("estDeliveryDt", NullValueHandling = NullValueHandling.Ignore)]
        public string EstDeliveryDt { get; set; }

        [JsonProperty("estDeliveryTm", NullValueHandling = NullValueHandling.Ignore)]
        public string EstDeliveryTm { get; set; }

        [JsonProperty("displayEstDeliveryDt", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayEstDeliveryDt { get; set; }

        [JsonProperty("displayEstDeliveryTm", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayEstDeliveryTm { get; set; }

        [JsonProperty("displayEstDeliveryDateTime", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayEstDeliveryDateTime { get; set; }

        [JsonProperty("actDeliveryDt", NullValueHandling = NullValueHandling.Ignore)]
        public string ActDeliveryDt { get; set; }

        [JsonProperty("displayActDeliveryDt", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayActDeliveryDt { get; set; }

        [JsonProperty("displayActDeliveryTm", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayActDeliveryTm { get; set; }

        [JsonProperty("displayActDeliveryDateTime", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayActDeliveryDateTime { get; set; }

        [JsonProperty("tenderedDt", NullValueHandling = NullValueHandling.Ignore)]
        public string TenderedDt { get; set; }

        [JsonProperty("displayTenderedDt", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayTenderedDt { get; set; }

        [JsonProperty("displayTenderedTm", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayTenderedTm { get; set; }

        [JsonProperty("displayTenderedDateTime", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayTenderedDateTime { get; set; }

        [JsonProperty("apptDeliveryDt", NullValueHandling = NullValueHandling.Ignore)]
        public string ApptDeliveryDt { get; set; }

        [JsonProperty("displayApptDeliveryDt", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayApptDeliveryDt { get; set; }

        [JsonProperty("displayApptDeliveryTm", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayApptDeliveryTm { get; set; }

        [JsonProperty("displayApptDeliveryDateTime", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayApptDeliveryDateTime { get; set; }

        [JsonProperty("nickName", NullValueHandling = NullValueHandling.Ignore)]
        public string NickName { get; set; }

        [JsonProperty("note", NullValueHandling = NullValueHandling.Ignore)]
        public string Note { get; set; }

        [JsonProperty("attemptedDelivery", NullValueHandling = NullValueHandling.Ignore)]
        public string AttemptedDelivery { get; set; }

        [JsonProperty("availableAtStation", NullValueHandling = NullValueHandling.Ignore)]
        public string AvailableAtStation { get; set; }

        [JsonProperty("codDetail", NullValueHandling = NullValueHandling.Ignore)]
        public CodDetail CodDetail { get; set; }

        [JsonProperty("matchedAccountList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> MatchedAccountList { get; set; }

        [JsonProperty("fxfAdvanceETA", NullValueHandling = NullValueHandling.Ignore)]
        public string FxfAdvanceEta { get; set; }

        [JsonProperty("fxfAdvanceReason", NullValueHandling = NullValueHandling.Ignore)]
        public string FxfAdvanceReason { get; set; }

        [JsonProperty("fxfAdvanceStatusCode", NullValueHandling = NullValueHandling.Ignore)]
        public string FxfAdvanceStatusCode { get; set; }

        [JsonProperty("fxfAdvanceStatusDesc", NullValueHandling = NullValueHandling.Ignore)]
        public string FxfAdvanceStatusDesc { get; set; }

        [JsonProperty("destLink", NullValueHandling = NullValueHandling.Ignore)]
        public string DestLink { get; set; }

        [JsonProperty("originLink", NullValueHandling = NullValueHandling.Ignore)]
        public string OriginLink { get; set; }

        [JsonProperty("hasBillOfLadingImage", NullValueHandling = NullValueHandling.Ignore)]
        public bool? HasBillOfLadingImage { get; set; }

        [JsonProperty("hasBillPresentment", NullValueHandling = NullValueHandling.Ignore)]
        public bool? HasBillPresentment { get; set; }

        [JsonProperty("signatureRequired", NullValueHandling = NullValueHandling.Ignore)]
        public long? SignatureRequired { get; set; }

        [JsonProperty("totalKgsWgt", NullValueHandling = NullValueHandling.Ignore)]
        public string TotalKgsWgt { get; set; }

        [JsonProperty("displayTotalKgsWgt", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayTotalKgsWgt { get; set; }

        [JsonProperty("totalLbsWgt", NullValueHandling = NullValueHandling.Ignore)]
        public string TotalLbsWgt { get; set; }

        [JsonProperty("displayTotalLbsWgt", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayTotalLbsWgt { get; set; }

        [JsonProperty("displayTotalWgt", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayTotalWgt { get; set; }

        [JsonProperty("pkgKgsWgt", NullValueHandling = NullValueHandling.Ignore)]
        public string PkgKgsWgt { get; set; }

        [JsonProperty("displayPkgKgsWgt", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayPkgKgsWgt { get; set; }

        [JsonProperty("pkgLbsWgt", NullValueHandling = NullValueHandling.Ignore)]
        public string PkgLbsWgt { get; set; }

        [JsonProperty("displayPkgLbsWgt", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayPkgLbsWgt { get; set; }

        [JsonProperty("displayPkgWgt", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayPkgWgt { get; set; }

        [JsonProperty("totalDIMLbsWgt", NullValueHandling = NullValueHandling.Ignore)]
        public string TotalDimLbsWgt { get; set; }

        [JsonProperty("displayTotalDIMLbsWgt", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayTotalDimLbsWgt { get; set; }

        [JsonProperty("totalDIMKgsWgt", NullValueHandling = NullValueHandling.Ignore)]
        public string TotalDimKgsWgt { get; set; }

        [JsonProperty("displayTotalDIMKgsWgt", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayTotalDimKgsWgt { get; set; }

        [JsonProperty("displayTotalDIMWgt", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayTotalDimWgt { get; set; }

        [JsonProperty("dimensions", NullValueHandling = NullValueHandling.Ignore)]
        public string Dimensions { get; set; }

        [JsonProperty("masterTrackingNbr", NullValueHandling = NullValueHandling.Ignore)]
        public string MasterTrackingNbr { get; set; }

        [JsonProperty("masterQualifier", NullValueHandling = NullValueHandling.Ignore)]
        public string MasterQualifier { get; set; }

        [JsonProperty("masterCarrierCD", NullValueHandling = NullValueHandling.Ignore)]
        public string MasterCarrierCd { get; set; }

        [JsonProperty("originalOutboundTrackingNbr", NullValueHandling = NullValueHandling.Ignore)]
        public string OriginalOutboundTrackingNbr { get; set; }

        [JsonProperty("originalOutboundQualifier", NullValueHandling = NullValueHandling.Ignore)]
        public string OriginalOutboundQualifier { get; set; }

        [JsonProperty("originalOutboundCarrierCD", NullValueHandling = NullValueHandling.Ignore)]
        public string OriginalOutboundCarrierCd { get; set; }

        [JsonProperty("invoiceNbrList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> InvoiceNbrList { get; set; }

        [JsonProperty("referenceList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ReferenceList { get; set; }

        [JsonProperty("doorTagNbrList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> DoorTagNbrList { get; set; }

        [JsonProperty("referenceDescList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ReferenceDescList { get; set; }

        [JsonProperty("purchaseOrderNbrList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> PurchaseOrderNbrList { get; set; }

        [JsonProperty("billofLadingNbrList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> BillofLadingNbrList { get; set; }

        [JsonProperty("shipperRefList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ShipperRefList { get; set; }

        [JsonProperty("rmaList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> RmaList { get; set; }

        [JsonProperty("deptNbrList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> DeptNbrList { get; set; }

        [JsonProperty("shipmentIdList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ShipmentIdList { get; set; }

        [JsonProperty("tcnList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TcnList { get; set; }

        [JsonProperty("partnerCarrierNbrList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> PartnerCarrierNbrList { get; set; }

        [JsonProperty("hasAssociatedShipments", NullValueHandling = NullValueHandling.Ignore)]
        public bool? HasAssociatedShipments { get; set; }

        [JsonProperty("hasAssociatedReturnShipments", NullValueHandling = NullValueHandling.Ignore)]
        public bool? HasAssociatedReturnShipments { get; set; }

        [JsonProperty("isDistributedService", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsDistributedService { get; set; }

        [JsonProperty("assocShpGrp", NullValueHandling = NullValueHandling.Ignore)]
        public long? AssocShpGrp { get; set; }

        [JsonProperty("drTgGrp", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(DecodeArrayConverter))]
        public List<long> DrTgGrp { get; set; }

        [JsonProperty("associationInfoList", NullValueHandling = NullValueHandling.Ignore)]
        public List<AssociationInfoList> AssociationInfoList { get; set; }

        [JsonProperty("returnReason", NullValueHandling = NullValueHandling.Ignore)]
        public string ReturnReason { get; set; }

        [JsonProperty("returnRelationship", NullValueHandling = NullValueHandling.Ignore)]
        public string ReturnRelationship { get; set; }

        [JsonProperty("skuItemUpcCdList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> SkuItemUpcCdList { get; set; }

        [JsonProperty("receiveQtyList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ReceiveQtyList { get; set; }

        [JsonProperty("itemDescList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ItemDescList { get; set; }

        [JsonProperty("partNbrList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> PartNbrList { get; set; }

        [JsonProperty("serviceCD", NullValueHandling = NullValueHandling.Ignore)]
        public string ServiceCd { get; set; }

        [JsonProperty("serviceDesc", NullValueHandling = NullValueHandling.Ignore)]
        public string ServiceDesc { get; set; }

        [JsonProperty("serviceShortDesc", NullValueHandling = NullValueHandling.Ignore)]
        public string ServiceShortDesc { get; set; }

        [JsonProperty("packageType", NullValueHandling = NullValueHandling.Ignore)]
        public string PackageType { get; set; }

        [JsonProperty("packaging", NullValueHandling = NullValueHandling.Ignore)]
        public string Packaging { get; set; }

        [JsonProperty("clearanceDetailLink", NullValueHandling = NullValueHandling.Ignore)]
        public string ClearanceDetailLink { get; set; }

        [JsonProperty("showClearanceDetailLink", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ShowClearanceDetailLink { get; set; }

        [JsonProperty("manufactureCountryCDList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ManufactureCountryCdList { get; set; }

        [JsonProperty("commodityCDList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> CommodityCdList { get; set; }

        [JsonProperty("commodityDescList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> CommodityDescList { get; set; }

        [JsonProperty("cerNbrList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> CerNbrList { get; set; }

        [JsonProperty("cerComplaintCDList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> CerComplaintCdList { get; set; }

        [JsonProperty("cerComplaintDescList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> CerComplaintDescList { get; set; }

        [JsonProperty("cerEventDateList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> CerEventDateList { get; set; }

        [JsonProperty("displayCerEventDateList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> DisplayCerEventDateList { get; set; }

        [JsonProperty("totalPieces", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TotalPieces { get; set; }

        [JsonProperty("specialHandlingServicesList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> SpecialHandlingServicesList { get; set; }

        [JsonProperty("shipmentType", NullValueHandling = NullValueHandling.Ignore)]
        public string ShipmentType { get; set; }

        [JsonProperty("pkgContentDesc1", NullValueHandling = NullValueHandling.Ignore)]
        public string PkgContentDesc1 { get; set; }

        [JsonProperty("pkgContentDesc2", NullValueHandling = NullValueHandling.Ignore)]
        public string PkgContentDesc2 { get; set; }

        [JsonProperty("docAWBNbr", NullValueHandling = NullValueHandling.Ignore)]
        public string DocAwbNbr { get; set; }

        [JsonProperty("originalCharges", NullValueHandling = NullValueHandling.Ignore)]
        public string OriginalCharges { get; set; }

        [JsonProperty("transportationCD", NullValueHandling = NullValueHandling.Ignore)]
        public string TransportationCd { get; set; }

        [JsonProperty("transportationDesc", NullValueHandling = NullValueHandling.Ignore)]
        public string TransportationDesc { get; set; }

        [JsonProperty("dutiesAndTaxesCD", NullValueHandling = NullValueHandling.Ignore)]
        public string DutiesAndTaxesCd { get; set; }

        [JsonProperty("dutiesAndTaxesDesc", NullValueHandling = NullValueHandling.Ignore)]
        public string DutiesAndTaxesDesc { get; set; }

        [JsonProperty("origPieceCount", NullValueHandling = NullValueHandling.Ignore)]
        public string OrigPieceCount { get; set; }

        [JsonProperty("destPieceCount", NullValueHandling = NullValueHandling.Ignore)]
        public string DestPieceCount { get; set; }

        [JsonProperty("billNoteMsg", NullValueHandling = NullValueHandling.Ignore)]
        public string BillNoteMsg { get; set; }

        [JsonProperty("goodsClassificationCD", NullValueHandling = NullValueHandling.Ignore)]
        public string GoodsClassificationCd { get; set; }

        [JsonProperty("receipientAddrQty", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ReceipientAddrQty { get; set; }

        [JsonProperty("deliveryAttempt", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? DeliveryAttempt { get; set; }

        [JsonProperty("codReturnTrackNbr", NullValueHandling = NullValueHandling.Ignore)]
        public string CodReturnTrackNbr { get; set; }

        [JsonProperty("returnMovementStatus", NullValueHandling = NullValueHandling.Ignore)]
        public string ReturnMovementStatus { get; set; }

        [JsonProperty("scanEventList", NullValueHandling = NullValueHandling.Ignore)]
        public List<ScanEventList> ScanEventList { get; set; }

        [JsonProperty("originAddress", NullValueHandling = NullValueHandling.Ignore)]
        public Address OriginAddress { get; set; }

        [JsonProperty("originLocationID", NullValueHandling = NullValueHandling.Ignore)]
        public string OriginLocationId { get; set; }

        [JsonProperty("originTermCity", NullValueHandling = NullValueHandling.Ignore)]
        public string OriginTermCity { get; set; }

        [JsonProperty("originTermStateCD", NullValueHandling = NullValueHandling.Ignore)]
        public string OriginTermStateCd { get; set; }

        [JsonProperty("destLocationAddress", NullValueHandling = NullValueHandling.Ignore)]
        public Address DestLocationAddress { get; set; }

        [JsonProperty("destLocationID", NullValueHandling = NullValueHandling.Ignore)]
        public string DestLocationId { get; set; }

        [JsonProperty("destLocationTermCity", NullValueHandling = NullValueHandling.Ignore)]
        public string DestLocationTermCity { get; set; }

        [JsonProperty("destLocationTermStateCD", NullValueHandling = NullValueHandling.Ignore)]
        public string DestLocationTermStateCd { get; set; }

        [JsonProperty("destAddress", NullValueHandling = NullValueHandling.Ignore)]
        public Address DestAddress { get; set; }

        [JsonProperty("halAddress", NullValueHandling = NullValueHandling.Ignore)]
        public Address HalAddress { get; set; }

        [JsonProperty("actualDelAddrCity", NullValueHandling = NullValueHandling.Ignore)]
        public string ActualDelAddrCity { get; set; }

        [JsonProperty("actualDelAddrStateCD", NullValueHandling = NullValueHandling.Ignore)]
        public string ActualDelAddrStateCd { get; set; }

        [JsonProperty("actualDelAddrZipCD", NullValueHandling = NullValueHandling.Ignore)]
        public string ActualDelAddrZipCd { get; set; }

        [JsonProperty("actualDelAddrCntryCD", NullValueHandling = NullValueHandling.Ignore)]
        public string ActualDelAddrCntryCd { get; set; }

        [JsonProperty("totalTransitMiles", NullValueHandling = NullValueHandling.Ignore)]
        public string TotalTransitMiles { get; set; }

        [JsonProperty("excepReasonList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ExcepReasonList { get; set; }

        [JsonProperty("excepActionList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ExcepActionList { get; set; }

        [JsonProperty("exceptionReason", NullValueHandling = NullValueHandling.Ignore)]
        public string ExceptionReason { get; set; }

        [JsonProperty("exceptionAction", NullValueHandling = NullValueHandling.Ignore)]
        public string ExceptionAction { get; set; }

        [JsonProperty("statusDetailsList", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> StatusDetailsList { get; set; }

        [JsonProperty("trackErrCD", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackErrCd { get; set; }

        [JsonProperty("destTZ", NullValueHandling = NullValueHandling.Ignore)]
        public string DestTz { get; set; }

        [JsonProperty("originTZ", NullValueHandling = NullValueHandling.Ignore)]
        public string OriginTz { get; set; }

        [JsonProperty("isMultiStat", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? IsMultiStat { get; set; }

        [JsonProperty("multiStatList", NullValueHandling = NullValueHandling.Ignore)]
        public List<MultiStatList> MultiStatList { get; set; }

        [JsonProperty("maskMessage", NullValueHandling = NullValueHandling.Ignore)]
        public string MaskMessage { get; set; }

        [JsonProperty("deliveryService", NullValueHandling = NullValueHandling.Ignore)]
        public string DeliveryService { get; set; }

        [JsonProperty("milestoDestination", NullValueHandling = NullValueHandling.Ignore)]
        public string MilestoDestination { get; set; }

        [JsonProperty("terms", NullValueHandling = NullValueHandling.Ignore)]
        public string Terms { get; set; }

        [JsonProperty("payorAcctNbr", NullValueHandling = NullValueHandling.Ignore)]
        public string PayorAcctNbr { get; set; }

        [JsonProperty("meterNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string MeterNumber { get; set; }

        [JsonProperty("originUbanizationCode", NullValueHandling = NullValueHandling.Ignore)]
        public string OriginUbanizationCode { get; set; }

        [JsonProperty("originCountryName", NullValueHandling = NullValueHandling.Ignore)]
        public string OriginCountryName { get; set; }

        [JsonProperty("halUrbanizationCD", NullValueHandling = NullValueHandling.Ignore)]
        public string HalUrbanizationCd { get; set; }

        [JsonProperty("actualDelAddrUrbanizationCD", NullValueHandling = NullValueHandling.Ignore)]
        public string ActualDelAddrUrbanizationCd { get; set; }

        [JsonProperty("actualDelAddrCountryName", NullValueHandling = NullValueHandling.Ignore)]
        public string ActualDelAddrCountryName { get; set; }

        [JsonProperty("destUrbanizationCD", NullValueHandling = NullValueHandling.Ignore)]
        public string DestUrbanizationCd { get; set; }

        [JsonProperty("destCountryName", NullValueHandling = NullValueHandling.Ignore)]
        public string DestCountryName { get; set; }

        [JsonProperty("delToDesc", NullValueHandling = NullValueHandling.Ignore)]
        public string DelToDesc { get; set; }

        [JsonProperty("recpShareID", NullValueHandling = NullValueHandling.Ignore)]
        public string RecpShareId { get; set; }

        [JsonProperty("shprShareID", NullValueHandling = NullValueHandling.Ignore)]
        public string ShprShareId { get; set; }

        [JsonProperty("requestedAppointmentInfoList", NullValueHandling = NullValueHandling.Ignore)]
        public List<InfoList> RequestedAppointmentInfoList { get; set; }

        [JsonProperty("defaultCDOType", NullValueHandling = NullValueHandling.Ignore)]
        public string DefaultCdoType { get; set; }

        [JsonProperty("returnAuthorizationName", NullValueHandling = NullValueHandling.Ignore)]
        public string ReturnAuthorizationName { get; set; }

        [JsonProperty("totalCustomsValueAmount", NullValueHandling = NullValueHandling.Ignore)]
        public string TotalCustomsValueAmount { get; set; }

        [JsonProperty("totalCustomsValueCurrency", NullValueHandling = NullValueHandling.Ignore)]
        public string TotalCustomsValueCurrency { get; set; }

        [JsonProperty("packageInsuredValueAmount", NullValueHandling = NullValueHandling.Ignore)]
        public string PackageInsuredValueAmount { get; set; }

        [JsonProperty("packageInsuredValueCurrency", NullValueHandling = NullValueHandling.Ignore)]
        public string PackageInsuredValueCurrency { get; set; }

        [JsonProperty("estDelTimeWindow", NullValueHandling = NullValueHandling.Ignore)]
        public EstDelTimeWindow EstDelTimeWindow { get; set; }

        [JsonProperty("standardTransitTimeWindow", NullValueHandling = NullValueHandling.Ignore)]
        public StandardTransitTimeWindow StandardTransitTimeWindow { get; set; }

        [JsonProperty("standardTransitDate", NullValueHandling = NullValueHandling.Ignore)]
        public StandardTransitDate StandardTransitDate { get; set; }

        [JsonProperty("pkgDimIn", NullValueHandling = NullValueHandling.Ignore)]
        public string PkgDimIn { get; set; }

        [JsonProperty("pkgDimCm", NullValueHandling = NullValueHandling.Ignore)]
        public string PkgDimCm { get; set; }

        [JsonProperty("returnedToShipperTrackNbr", NullValueHandling = NullValueHandling.Ignore)]
        public string ReturnedToShipperTrackNbr { get; set; }

        [JsonProperty("commodityInfoList", NullValueHandling = NullValueHandling.Ignore)]
        public List<CommodityInfoList> CommodityInfoList { get; set; }

        [JsonProperty("statusActionDesc", NullValueHandling = NullValueHandling.Ignore)]
        public string StatusActionDesc { get; set; }

        [JsonProperty("destinationGeoCoordinate", NullValueHandling = NullValueHandling.Ignore)]
        public DestinationGeoCoordinate DestinationGeoCoordinate { get; set; }

        [JsonProperty("serviceCommitMessage", NullValueHandling = NullValueHandling.Ignore)]
        public string ServiceCommitMessage { get; set; }

        [JsonProperty("serviceCommitMessageType", NullValueHandling = NullValueHandling.Ignore)]
        public string ServiceCommitMessageType { get; set; }

        [JsonProperty("lastUpdateDestinationAddress", NullValueHandling = NullValueHandling.Ignore)]
        public Address LastUpdateDestinationAddress { get; set; }

        [JsonProperty("halAddressLocationId", NullValueHandling = NullValueHandling.Ignore)]
        public string HalAddressLocationId { get; set; }

        [JsonProperty("streetGeoCoordinate", NullValueHandling = NullValueHandling.Ignore)]
        public StreetGeoCoordinate StreetGeoCoordinate { get; set; }

        [JsonProperty("piecesPerShipment", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? PiecesPerShipment { get; set; }

        [JsonProperty("totalPiecesPerMPSShipment", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? TotalPiecesPerMpsShipment { get; set; }

        [JsonProperty("shipperAccountNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string ShipperAccountNumber { get; set; }

        [JsonProperty("coBrandedLogoLocation", NullValueHandling = NullValueHandling.Ignore)]
        public string CoBrandedLogoLocation { get; set; }

        [JsonProperty("coBrandedLogoUrl", NullValueHandling = NullValueHandling.Ignore)]
        public string CoBrandedLogoUrl { get; set; }

        [JsonProperty("coBrandedCouponLocation", NullValueHandling = NullValueHandling.Ignore)]
        public string CoBrandedCouponLocation { get; set; }

        [JsonProperty("coBrandedCouponUrl", NullValueHandling = NullValueHandling.Ignore)]
        public string CoBrandedCouponUrl { get; set; }

        [JsonProperty("coBrandedLogoAltTxt", NullValueHandling = NullValueHandling.Ignore)]
        public string CoBrandedLogoAltTxt { get; set; }

        [JsonProperty("coBrandedCouponAltTxt", NullValueHandling = NullValueHandling.Ignore)]
        public string CoBrandedCouponAltTxt { get; set; }

        [JsonProperty("brokerName", NullValueHandling = NullValueHandling.Ignore)]
        public string BrokerName { get; set; }

        [JsonProperty("brokerCompanyName", NullValueHandling = NullValueHandling.Ignore)]
        public string BrokerCompanyName { get; set; }

        [JsonProperty("buyerSoldToPartyName", NullValueHandling = NullValueHandling.Ignore)]
        public string BuyerSoldToPartyName { get; set; }

        [JsonProperty("buyerSoldToPartyCompanyName", NullValueHandling = NullValueHandling.Ignore)]
        public string BuyerSoldToPartyCompanyName { get; set; }

        [JsonProperty("importerOfRecordCompanyName", NullValueHandling = NullValueHandling.Ignore)]
        public string ImporterOfRecordCompanyName { get; set; }

        [JsonProperty("importerOfRecordName", NullValueHandling = NullValueHandling.Ignore)]
        public string ImporterOfRecordName { get; set; }

        [JsonProperty("consolidationDetails", NullValueHandling = NullValueHandling.Ignore)]
        public List<ConsolidationDetail> ConsolidationDetails { get; set; }

        [JsonProperty("exclusionReasonDetails", NullValueHandling = NullValueHandling.Ignore)]
        public List<ExclusionReasonDetail> ExclusionReasonDetails { get; set; }

        [JsonProperty("eligibleDeliveryOptions", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> EligibleDeliveryOptions { get; set; }

        [JsonProperty("matched", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Matched { get; set; }

        [JsonProperty("exception", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Exception { get; set; }

        [JsonProperty("expired", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Expired { get; set; }

        [JsonProperty("duplicate", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Duplicate { get; set; }

        [JsonProperty("save", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Save { get; set; }

        [JsonProperty("watch", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Watch { get; set; }

        [JsonProperty("historical", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Historical { get; set; }

        [JsonProperty("tenderedNotification", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TenderedNotification { get; set; }

        [JsonProperty("deliveredNotification", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DeliveredNotification { get; set; }

        [JsonProperty("exceptionNotification", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ExceptionNotification { get; set; }

        [JsonProperty("estimatedDeliveryDateChangeNotification", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EstimatedDeliveryDateChangeNotification { get; set; }

        [JsonProperty("currentStatusNotification", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CurrentStatusNotification { get; set; }

        [JsonProperty("anticipatedShipDtLabel", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AnticipatedShipDtLabel { get; set; }

        [JsonProperty("shipPickupDtLabel", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ShipPickupDtLabel { get; set; }

        [JsonProperty("actualPickupLabel", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ActualPickupLabel { get; set; }

        [JsonProperty("orderReceivedLabel", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OrderReceivedLabel { get; set; }

        [JsonProperty("estimatedDeliveryDtLabel", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EstimatedDeliveryDtLabel { get; set; }

        [JsonProperty("deliveryDtLabel", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DeliveryDtLabel { get; set; }

        [JsonProperty("actualDeliveryDtLabel", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ActualDeliveryDtLabel { get; set; }

        [JsonProperty("mps", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Mps { get; set; }

        [JsonProperty("gmps", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Gmps { get; set; }

        [JsonProperty("canceled", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canceled { get; set; }

        [JsonProperty("pending", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Pending { get; set; }

        [JsonProperty("expiring", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Expiring { get; set; }

        [JsonProperty("prePickup", NullValueHandling = NullValueHandling.Ignore)]
        public bool? PrePickup { get; set; }

        [JsonProperty("pickup", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Pickup { get; set; }

        [JsonProperty("inTransit", NullValueHandling = NullValueHandling.Ignore)]
        public bool? InTransit { get; set; }

        [JsonProperty("inProgress", NullValueHandling = NullValueHandling.Ignore)]
        public bool? InProgress { get; set; }

        [JsonProperty("delException", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DelException { get; set; }

        [JsonProperty("clearanceDelay", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ClearanceDelay { get; set; }

        [JsonProperty("delivered", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delivered { get; set; }

        [JsonProperty("hal", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hal { get; set; }

        [JsonProperty("onSchedule", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OnSchedule { get; set; }

        [JsonProperty("deliveryToday", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DeliveryToday { get; set; }

        [JsonProperty("shipmentException", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ShipmentException { get; set; }

        [JsonProperty("inFedExPossession", NullValueHandling = NullValueHandling.Ignore)]
        public bool? InFedExPossession { get; set; }

        [JsonProperty("documentAvailable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DocumentAvailable { get; set; }

        [JsonProperty("fsm", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fsm { get; set; }

        [JsonProperty("droppedOff", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DroppedOff { get; set; }

        [JsonProperty("exclusionReason", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ExclusionReason { get; set; }

        [JsonProperty("consolidationDetail", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ConsolidationDetail { get; set; }

        [JsonProperty("actualDelAddrResidential", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ActualDelAddrResidential { get; set; }

        [JsonProperty("rthavailableCD", NullValueHandling = NullValueHandling.Ignore)]
        public string RthavailableCd { get; set; }

        [JsonProperty("reqEstDelDt", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReqEstDelDt { get; set; }

        [JsonProperty("cdoeligible", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Cdoeligible { get; set; }

        [JsonProperty("cdoexists", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Cdoexists { get; set; }

        [JsonProperty("cdoinfoList", NullValueHandling = NullValueHandling.Ignore)]
        public List<InfoList> CdoinfoList { get; set; }

        [JsonProperty("mtchdByRecShrID", NullValueHandling = NullValueHandling.Ignore)]
        public bool? MtchdByRecShrId { get; set; }

        [JsonProperty("mtchdByShiprShrID", NullValueHandling = NullValueHandling.Ignore)]
        public bool? MtchdByShiprShrId { get; set; }

        [JsonProperty("historicalEDTW", NullValueHandling = NullValueHandling.Ignore)]
        public bool? HistoricalEdtw { get; set; }

        [JsonProperty("nonHistoricalEDTW", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NonHistoricalEdtw { get; set; }

        [JsonProperty("targetedMsg", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TargetedMsg { get; set; }

        [JsonProperty("commodityInfoAvail", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CommodityInfoAvail { get; set; }

        [JsonProperty("codrequired", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Codrequired { get; set; }

        [JsonProperty("delayed", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delayed { get; set; }

        [JsonProperty("orderCompleteLabel", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OrderCompleteLabel { get; set; }

        [JsonProperty("tenderedDtLabel", NullValueHandling = NullValueHandling.Ignore)]
        public bool? TenderedDtLabel { get; set; }

        [JsonProperty("shipDtLabel", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ShipDtLabel { get; set; }

        [JsonProperty("estDelTmWindowLabel", NullValueHandling = NullValueHandling.Ignore)]
        public bool? EstDelTmWindowLabel { get; set; }

        [JsonProperty("outboundDirection", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OutboundDirection { get; set; }

        [JsonProperty("inboundDirection", NullValueHandling = NullValueHandling.Ignore)]
        public bool? InboundDirection { get; set; }

        [JsonProperty("thirdpartyDirection", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ThirdpartyDirection { get; set; }

        [JsonProperty("unknownDirection", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UnknownDirection { get; set; }

        [JsonProperty("fxfAdvanceNotice", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FxfAdvanceNotice { get; set; }

        [JsonProperty("spod", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Spod { get; set; }

        [JsonProperty("signatureAvailable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SignatureAvailable { get; set; }

        [JsonProperty("signatureThumbnailAvailable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? SignatureThumbnailAvailable { get; set; }

        [JsonProperty("originalOutBound", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OriginalOutBound { get; set; }

        [JsonProperty("childPackage", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ChildPackage { get; set; }

        [JsonProperty("parentPackage", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ParentPackage { get; set; }

        [JsonProperty("reclassifiedAsSingleShipment", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReclassifiedAsSingleShipment { get; set; }

        [JsonProperty("maskShipper", NullValueHandling = NullValueHandling.Ignore)]
        public bool? MaskShipper { get; set; }

        [JsonProperty("halEligible", NullValueHandling = NullValueHandling.Ignore)]
        public bool? HalEligible { get; set; }

        [JsonProperty("beforePossessionStatus", NullValueHandling = NullValueHandling.Ignore)]
        public bool? BeforePossessionStatus { get; set; }

        [JsonProperty("fedexOfficeOnlineOrders", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FedexOfficeOnlineOrders { get; set; }

        [JsonProperty("fedexOfficeInStoreOrders", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FedexOfficeInStoreOrders { get; set; }

        [JsonProperty("multipleStop", NullValueHandling = NullValueHandling.Ignore)]
        public bool? MultipleStop { get; set; }

        [JsonProperty("customCritical", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CustomCritical { get; set; }

        [JsonProperty("invalid", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Invalid { get; set; }

        [JsonProperty("notFound", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotFound { get; set; }

        [JsonProperty("freight", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Freight { get; set; }

        [JsonProperty("mpstype", NullValueHandling = NullValueHandling.Ignore)]
        public string Mpstype { get; set; }

        [JsonProperty("residential", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Residential { get; set; }

        [JsonProperty("destResidential", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DestResidential { get; set; }

        [JsonProperty("originResidential", NullValueHandling = NullValueHandling.Ignore)]
        public bool? OriginResidential { get; set; }

        [JsonProperty("halresidential", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Halresidential { get; set; }

        [JsonProperty("doorTagNbrListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> DoorTagNbrListNoInit { get; set; }

        [JsonProperty("drTgGrpNoInit", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(DecodeArrayConverter))]
        public List<long> DrTgGrpNoInit { get; set; }

        [JsonProperty("haladdress", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Haladdress { get; set; }

        [JsonProperty("indirectSignatureReleaseEligible", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IndirectSignatureReleaseEligible { get; set; }

        [JsonProperty("rerouteEligible", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RerouteEligible { get; set; }

        [JsonProperty("rescheduleEligible", NullValueHandling = NullValueHandling.Ignore)]
        public bool? RescheduleEligible { get; set; }

        [JsonProperty("shipperRefListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ShipperRefListNoInit { get; set; }

        [JsonProperty("rmaListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> RmaListNoInit { get; set; }

        [JsonProperty("deptNbrListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> DeptNbrListNoInit { get; set; }

        [JsonProperty("shipmentIdListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ShipmentIdListNoInit { get; set; }

        [JsonProperty("tcnListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> TcnListNoInit { get; set; }

        [JsonProperty("partnerCarrierNbrListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> PartnerCarrierNbrListNoInit { get; set; }

        [JsonProperty("skuItemUpcCdList_noInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> SkuItemUpcCdListNoInit { get; set; }

        [JsonProperty("receiveQtyListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ReceiveQtyListNoInit { get; set; }

        [JsonProperty("itemDescListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ItemDescListNoInit { get; set; }

        [JsonProperty("partNbrListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> PartNbrListNoInit { get; set; }

        [JsonProperty("commodityCDListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> CommodityCdListNoInit { get; set; }

        [JsonProperty("commodityDescListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> CommodityDescListNoInit { get; set; }

        [JsonProperty("cerNbrListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> CerNbrListNoInit { get; set; }

        [JsonProperty("cerComplaintCDListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> CerComplaintCdListNoInit { get; set; }

        [JsonProperty("cerEventDateListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> CerEventDateListNoInit { get; set; }

        [JsonProperty("displayCerEventDateListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> DisplayCerEventDateListNoInit { get; set; }

        [JsonProperty("cerComplaintDescListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> CerComplaintDescListNoInit { get; set; }

        [JsonProperty("scanEventListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<ScanEventList> ScanEventListNoInit { get; set; }

        [JsonProperty("multiStatListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<MultiStatList> MultiStatListNoInit { get; set; }

        [JsonProperty("associationInfoListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<AssociationInfoList> AssociationInfoListNoInit { get; set; }

        [JsonProperty("excepReasonListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ExcepReasonListNoInit { get; set; }

        [JsonProperty("excepActionListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ExcepActionListNoInit { get; set; }

        [JsonProperty("statusDetailsListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> StatusDetailsListNoInit { get; set; }

        [JsonProperty("manufactureCountryCDListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ManufactureCountryCdListNoInit { get; set; }

        [JsonProperty("matchedAccountListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> MatchedAccountListNoInit { get; set; }

        [JsonProperty("invoiceNbrListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> InvoiceNbrListNoInit { get; set; }

        [JsonProperty("referenceListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ReferenceListNoInit { get; set; }

        [JsonProperty("purchaseOrderNbrListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> PurchaseOrderNbrListNoInit { get; set; }

        [JsonProperty("billofLadingNbrListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> BillofLadingNbrListNoInit { get; set; }

        [JsonProperty("referenceDescListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ReferenceDescListNoInit { get; set; }

        [JsonProperty("specialHandlingServicesListNoInit", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> SpecialHandlingServicesListNoInit { get; set; }

        [JsonProperty("empty", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Empty { get; set; }

        [JsonProperty("isReturn", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsReturn { get; set; }

        [JsonProperty("isStreetMapEligible", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsStreetMapEligible { get; set; }
    }

    public partial class AssociationInfoList
    {
        [JsonProperty("trackingNumberInfo", NullValueHandling = NullValueHandling.Ignore)]
        public TrackingNumberInfo TrackingNumberInfo { get; set; }

        [JsonProperty("associatedType", NullValueHandling = NullValueHandling.Ignore)]
        public string AssociatedType { get; set; }
    }

    public partial class TrackingNumberInfo
    {
        [JsonProperty("trackingNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingNumber { get; set; }

        [JsonProperty("trackingQualifier", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingQualifier { get; set; }

        [JsonProperty("trackingCarrier", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingCarrier { get; set; }

        [JsonProperty("processingParameters", NullValueHandling = NullValueHandling.Ignore)]
        public ProcessingParameters ProcessingParameters { get; set; }
    }

    public partial class ProcessingParameters
    {
        [JsonProperty("returnDetailedErrors", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReturnDetailedErrors { get; set; }

        [JsonProperty("anonymousTransaction", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AnonymousTransaction { get; set; }

        [JsonProperty("returnLocalizedDateTime", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ReturnLocalizedDateTime { get; set; }

        [JsonProperty("debug", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Debug { get; set; }
    }

    public partial class InfoList
    {
        [JsonProperty("spclInstructDesc", NullValueHandling = NullValueHandling.Ignore)]
        public string SpclInstructDesc { get; set; }

        [JsonProperty("delivOptn", NullValueHandling = NullValueHandling.Ignore)]
        public string DelivOptn { get; set; }

        [JsonProperty("delivOptnStatus", NullValueHandling = NullValueHandling.Ignore)]
        public string DelivOptnStatus { get; set; }

        [JsonProperty("reqApptWdw", NullValueHandling = NullValueHandling.Ignore)]
        public string ReqApptWdw { get; set; }

        [JsonProperty("reqApptDesc", NullValueHandling = NullValueHandling.Ignore)]
        public string ReqApptDesc { get; set; }

        [JsonProperty("rerouteTRKNbr", NullValueHandling = NullValueHandling.Ignore)]
        public string RerouteTrkNbr { get; set; }

        [JsonProperty("beginTm", NullValueHandling = NullValueHandling.Ignore)]
        public string BeginTm { get; set; }

        [JsonProperty("endTm", NullValueHandling = NullValueHandling.Ignore)]
        public string EndTm { get; set; }
    }

    public partial class CodDetail
    {
        [JsonProperty("codAmount", NullValueHandling = NullValueHandling.Ignore)]
        public CodAmount CodAmount { get; set; }
    }

    public partial class CodAmount
    {
        [JsonProperty("amount", NullValueHandling = NullValueHandling.Ignore)]
        public long? Amount { get; set; }
    }

    public partial class CommodityInfoList
    {
        [JsonProperty("countryOfManufacture", NullValueHandling = NullValueHandling.Ignore)]
        public string CountryOfManufacture { get; set; }

        [JsonProperty("harmonizedCode", NullValueHandling = NullValueHandling.Ignore)]
        public string HarmonizedCode { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }
    }

    public partial class ConsolidationDetail
    {
        [JsonProperty("consolidationId", NullValueHandling = NullValueHandling.Ignore)]
        public string ConsolidationId { get; set; }

        [JsonProperty("count", NullValueHandling = NullValueHandling.Ignore)]
        public long? Count { get; set; }
    }

    public partial class DelayDetail
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("subType", NullValueHandling = NullValueHandling.Ignore)]
        public string SubType { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }
    }

    public partial class Address
    {
        [JsonProperty("streetLines", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> StreetLines { get; set; }

        [JsonProperty("city", NullValueHandling = NullValueHandling.Ignore)]
        public string City { get; set; }

        [JsonProperty("stateOrProvinceCode", NullValueHandling = NullValueHandling.Ignore)]
        public string StateOrProvinceCode { get; set; }

        [JsonProperty("postalCode", NullValueHandling = NullValueHandling.Ignore)]
        public string PostalCode { get; set; }

        [JsonProperty("countryCode", NullValueHandling = NullValueHandling.Ignore)]
        public string CountryCode { get; set; }

        [JsonProperty("residential", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Residential { get; set; }

        [JsonProperty("classification", NullValueHandling = NullValueHandling.Ignore)]
        public string Classification { get; set; }

        [JsonProperty("urbanizationCode", NullValueHandling = NullValueHandling.Ignore)]
        public string UrbanizationCode { get; set; }

        [JsonProperty("countryName", NullValueHandling = NullValueHandling.Ignore)]
        public string CountryName { get; set; }
    }

    public partial class DestinationGeoCoordinate
    {
        [JsonProperty("latitude", NullValueHandling = NullValueHandling.Ignore)]
        public long? Latitude { get; set; }

        [JsonProperty("longitude", NullValueHandling = NullValueHandling.Ignore)]
        public long? Longitude { get; set; }

        [JsonProperty("altitude", NullValueHandling = NullValueHandling.Ignore)]
        public long? Altitude { get; set; }

        [JsonProperty("accuracy", NullValueHandling = NullValueHandling.Ignore)]
        public long? Accuracy { get; set; }

        [JsonProperty("altitudeAccuracy", NullValueHandling = NullValueHandling.Ignore)]
        public long? AltitudeAccuracy { get; set; }

        [JsonProperty("heading", NullValueHandling = NullValueHandling.Ignore)]
        public long? Heading { get; set; }

        [JsonProperty("speed", NullValueHandling = NullValueHandling.Ignore)]
        public long? Speed { get; set; }
    }

    public partial class EstDelTimeWindow
    {
        [JsonProperty("estDelTmWindowStart", NullValueHandling = NullValueHandling.Ignore)]
        public string EstDelTmWindowStart { get; set; }

        [JsonProperty("estDelTmWindowEnd", NullValueHandling = NullValueHandling.Ignore)]
        public string EstDelTmWindowEnd { get; set; }

        [JsonProperty("displayEstDelTmWindowTmStart", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayEstDelTmWindowTmStart { get; set; }

        [JsonProperty("displayEstDelTmWindowTmEnd", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayEstDelTmWindowTmEnd { get; set; }
    }

    public partial class ExclusionReasonDetail
    {
        [JsonProperty("exclusionReasonDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string ExclusionReasonDescription { get; set; }
    }

    public partial class MultiStatList
    {
        [JsonProperty("multiPiec", NullValueHandling = NullValueHandling.Ignore)]
        public string MultiPiec { get; set; }

        [JsonProperty("multiTm", NullValueHandling = NullValueHandling.Ignore)]
        public string MultiTm { get; set; }

        [JsonProperty("multiDispTm", NullValueHandling = NullValueHandling.Ignore)]
        public string MultiDispTm { get; set; }

        [JsonProperty("multiSta", NullValueHandling = NullValueHandling.Ignore)]
        public string MultiSta { get; set; }
    }

    public partial class ScanEventList
    {
        [JsonProperty("date", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Date { get; set; }

        [JsonProperty("time", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Time { get; set; }

        [JsonProperty("gmtOffset", NullValueHandling = NullValueHandling.Ignore)]
        public string GmtOffset { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("statusCD", NullValueHandling = NullValueHandling.Ignore)]
        public string StatusCd { get; set; }

        [JsonProperty("scanLocation", NullValueHandling = NullValueHandling.Ignore)]
        public string ScanLocation { get; set; }

        [JsonProperty("scanDetails", NullValueHandling = NullValueHandling.Ignore)]
        public string ScanDetails { get; set; }

        [JsonProperty("scanDetailsHtml", NullValueHandling = NullValueHandling.Ignore)]
        public string ScanDetailsHtml { get; set; }

        [JsonProperty("rtrnShprTrkNbr", NullValueHandling = NullValueHandling.Ignore)]
        public string RtrnShprTrkNbr { get; set; }

        [JsonProperty("statusExceptionCode", NullValueHandling = NullValueHandling.Ignore)]
        public string StatusExceptionCode { get; set; }

        [JsonProperty("delayDetail", NullValueHandling = NullValueHandling.Ignore)]
        public DelayDetail DelayDetail { get; set; }

        [JsonProperty("exception", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Exception { get; set; }

        [JsonProperty("delException", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DelException { get; set; }

        [JsonProperty("clearanceDelay", NullValueHandling = NullValueHandling.Ignore)]
        public bool? ClearanceDelay { get; set; }

        [JsonProperty("delivered", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delivered { get; set; }
    }

    public partial class StandardTransitDate
    {
        [JsonProperty("stdTransitDate", NullValueHandling = NullValueHandling.Ignore)]
        public string StdTransitDate { get; set; }

        [JsonProperty("displayStdTransitDate", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayStdTransitDate { get; set; }
    }

    public partial class StandardTransitTimeWindow
    {
        [JsonProperty("stdTransitTimeStart", NullValueHandling = NullValueHandling.Ignore)]
        public string StdTransitTimeStart { get; set; }

        [JsonProperty("displayStdTransitTimeStart", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayStdTransitTimeStart { get; set; }

        [JsonProperty("stdTransitTimeEnd", NullValueHandling = NullValueHandling.Ignore)]
        public string StdTransitTimeEnd { get; set; }

        [JsonProperty("displayStdTransitTimeEnd", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayStdTransitTimeEnd { get; set; }
    }

    public partial class StreetGeoCoordinate
    {
        [JsonProperty("mapId", NullValueHandling = NullValueHandling.Ignore)]
        public string MapId { get; set; }

        [JsonProperty("localTimeStamp", NullValueHandling = NullValueHandling.Ignore)]
        public string LocalTimeStamp { get; set; }

        [JsonProperty("gmtTimeStamp", NullValueHandling = NullValueHandling.Ignore)]
        public string GmtTimeStamp { get; set; }
    }

    public partial class FedexTrackingInfoDto
    {
        public static FedexTrackingInfoDto FromJson(string json) => JsonConvert.DeserializeObject<FedexTrackingInfoDto>(json, ShipStationApi.Models.Tracking.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this FedexTrackingInfoDto self) => JsonConvert.SerializeObject(self, ShipStationApi.Models.Tracking.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    internal class ParseStringConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(long) || t == typeof(long?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            long l;
            if (Int64.TryParse(value, out l))
            {
                return l;
            }
            throw new Exception("Cannot unmarshal type long");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (long)untypedValue;
            serializer.Serialize(writer, value.ToString());
            return;
        }

        public static readonly ParseStringConverter Singleton = new ParseStringConverter();
    }

    internal class DecodeArrayConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(List<long>);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            reader.Read();
            var value = new List<long>();
            while (reader.TokenType != JsonToken.EndArray)
            {
                var converter = ParseStringConverter.Singleton;
                var arrayItem = (long)converter.ReadJson(reader, typeof(long), null, serializer);
                value.Add(arrayItem);
                reader.Read();
            }
            return value;
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (List<long>)untypedValue;
            writer.WriteStartArray();
            foreach (var arrayItem in value)
            {
                var converter = ParseStringConverter.Singleton;
                converter.WriteJson(writer, arrayItem, serializer);
            }
            writer.WriteEndArray();
            return;
        }

        public static readonly DecodeArrayConverter Singleton = new DecodeArrayConverter();
    }
}
