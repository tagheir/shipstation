using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Text;

namespace ShipStationApi.Models
{
    // <auto-generated />
    //
    // To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
    //
    //    using QuickType;
    //
    //    var shipStationExternalShipmentDto = ShipStationExternalShipmentDto.FromJson(jsonString);



        public partial class ShipStationExternalShipmentDto
        {
            [JsonProperty("fulfillments", NullValueHandling = NullValueHandling.Ignore)]
            public List<Fulfillment> Fulfillments { get; set; }

            [JsonProperty("total", NullValueHandling = NullValueHandling.Ignore)]
            public long? Total { get; set; }

            [JsonProperty("page", NullValueHandling = NullValueHandling.Ignore)]
            public long? Page { get; set; }

            [JsonProperty("pages", NullValueHandling = NullValueHandling.Ignore)]
            public long? Pages { get; set; }

            [JsonProperty("pageSize", NullValueHandling = NullValueHandling.Ignore)]
            public long? PageSize { get; set; }
        }

        public partial class Fulfillment
        {
            [JsonProperty("FillID", NullValueHandling = NullValueHandling.Ignore)]
            public long? FillId { get; set; }

            [JsonProperty("SellerID", NullValueHandling = NullValueHandling.Ignore)]
            public long? SellerId { get; set; }

            [JsonProperty("OrderID", NullValueHandling = NullValueHandling.Ignore)]
            public long? OrderId { get; set; }

            [JsonProperty("StoreID", NullValueHandling = NullValueHandling.Ignore)]
            public long? StoreId { get; set; }

            [JsonProperty("FillProviderID", NullValueHandling = NullValueHandling.Ignore)]
            public long? FillProviderId { get; set; }

            [JsonProperty("SellerFillProviderID", NullValueHandling = NullValueHandling.Ignore)]
            public long? SellerFillProviderId { get; set; }

            [JsonProperty("FillServiceID", NullValueHandling = NullValueHandling.Ignore)]
            public long? FillServiceId { get; set; }

            [JsonProperty("Voided", NullValueHandling = NullValueHandling.Ignore)]
            public bool? Voided { get; set; }

            [JsonProperty("ShipDate", NullValueHandling = NullValueHandling.Ignore)]
            public DateTimeOffset? ShipDate { get; set; }

            [JsonProperty("VoidDate")]
            public object VoidDate { get; set; }

            [JsonProperty("Name", NullValueHandling = NullValueHandling.Ignore)]
            public string Name { get; set; }

            [JsonProperty("Company")]
            public object Company { get; set; }

            [JsonProperty("Street1", NullValueHandling = NullValueHandling.Ignore)]
            public string Street1 { get; set; }

            [JsonProperty("Street2", NullValueHandling = NullValueHandling.Ignore)]
            public string Street2 { get; set; }

            [JsonProperty("Street3")]
            public object Street3 { get; set; }

            [JsonProperty("City", NullValueHandling = NullValueHandling.Ignore)]
            public string City { get; set; }

            [JsonProperty("State", NullValueHandling = NullValueHandling.Ignore)]
            public string State { get; set; }

            [JsonProperty("PostalCode", NullValueHandling = NullValueHandling.Ignore)]
            public string PostalCode { get; set; }

            [JsonProperty("CountryCode", NullValueHandling = NullValueHandling.Ignore)]
            public string CountryCode { get; set; }

            [JsonProperty("Phone", NullValueHandling = NullValueHandling.Ignore)]
            public string Phone { get; set; }

            [JsonProperty("TrackingNumber", NullValueHandling = NullValueHandling.Ignore)]
            public string TrackingNumber { get; set; }

            [JsonProperty("FillFee", NullValueHandling = NullValueHandling.Ignore)]
            public long? FillFee { get; set; }

            [JsonProperty("EmailNotificationSent", NullValueHandling = NullValueHandling.Ignore)]
            public bool? EmailNotificationSent { get; set; }

            [JsonProperty("DeliveryMessage")]
            public object DeliveryMessage { get; set; }

            [JsonProperty("DeliveryStatusDate", NullValueHandling = NullValueHandling.Ignore)]
            public DateTimeOffset? DeliveryStatusDate { get; set; }

            [JsonProperty("ExternalID", NullValueHandling = NullValueHandling.Ignore)]
            public string ExternalId { get; set; }

            [JsonProperty("ExternalStatus", NullValueHandling = NullValueHandling.Ignore)]
            public string ExternalStatus { get; set; }

            [JsonProperty("ExternalStatusDate", NullValueHandling = NullValueHandling.Ignore)]
            public DateTimeOffset? ExternalStatusDate { get; set; }

            [JsonProperty("NotifyErrorMessage")]
            public object NotifyErrorMessage { get; set; }

            [JsonProperty("EmailErrorMessage")]
            public object EmailErrorMessage { get; set; }

            [JsonProperty("MarketplaceNotified", NullValueHandling = NullValueHandling.Ignore)]
            public bool? MarketplaceNotified { get; set; }

            [JsonProperty("CreateDate", NullValueHandling = NullValueHandling.Ignore)]
            public DateTimeOffset? CreateDate { get; set; }

            [JsonProperty("OrderNumber", NullValueHandling = NullValueHandling.Ignore)]
            public string OrderNumber { get; set; }

            [JsonProperty("Items")]
            public object Items { get; set; }

            [JsonProperty("Delivered")]
            public object Delivered { get; set; }

            [JsonProperty("DeliveryDate")]
            public object DeliveryDate { get; set; }

            [JsonProperty("OrderBuyerEmail", NullValueHandling = NullValueHandling.Ignore)]
            public string OrderBuyerEmail { get; set; }

            [JsonProperty("UserID", NullValueHandling = NullValueHandling.Ignore)]
            public string UserId { get; set; }

            [JsonProperty("BatchID", NullValueHandling = NullValueHandling.Ignore)]
            public long? BatchId { get; set; }

            [JsonProperty("VoidRequested", NullValueHandling = NullValueHandling.Ignore)]
            public bool? VoidRequested { get; set; }

            [JsonProperty("Shipped", NullValueHandling = NullValueHandling.Ignore)]
            public bool? Shipped { get; set; }

            [JsonProperty("FillErrorMessage")]
            public object FillErrorMessage { get; set; }

            [JsonProperty("CarrierCode")]
            public object CarrierCode { get; set; }

            [JsonProperty("CarrierID", NullValueHandling = NullValueHandling.Ignore)]
            public long? CarrierId { get; set; }

            [JsonProperty("CarrierURL")]
            public object CarrierUrl { get; set; }

            [JsonProperty("BatchNumber", NullValueHandling = NullValueHandling.Ignore)]
            public string BatchNumber { get; set; }

            [JsonProperty("TaxAmount", NullValueHandling = NullValueHandling.Ignore)]
            public double? TaxAmount { get; set; }

            [JsonProperty("OrderTotal", NullValueHandling = NullValueHandling.Ignore)]
            public double? OrderTotal { get; set; }

            [JsonProperty("CarrierName", NullValueHandling = NullValueHandling.Ignore)]
            public string CarrierName { get; set; }

            [JsonProperty("UserName", NullValueHandling = NullValueHandling.Ignore)]
            public string UserName { get; set; }

            [JsonProperty("WarehouseName", NullValueHandling = NullValueHandling.Ignore)]
            public string WarehouseName { get; set; }

            [JsonProperty("Source", NullValueHandling = NullValueHandling.Ignore)]
            public string Source { get; set; }

            [JsonProperty("WeightOz", NullValueHandling = NullValueHandling.Ignore)]
            public long? WeightOz { get; set; }

            [JsonProperty("FillStatusText", NullValueHandling = NullValueHandling.Ignore)]
            public string FillStatusText { get; set; }

            [JsonProperty("CarrierUrlWithTrackingNo", NullValueHandling = NullValueHandling.Ignore)]
            public string CarrierUrlWithTrackingNo { get; set; }

            [JsonProperty("HasWarnings", NullValueHandling = NullValueHandling.Ignore)]
            public bool? HasWarnings { get; set; }
        }

        public partial class ShipStationExternalShipmentDto
        {
            public static ShipStationExternalShipmentDto FromJson(string json) => JsonConvert.DeserializeObject<ShipStationExternalShipmentDto>(json,Converter.Settings);
        }

     
}
