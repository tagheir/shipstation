// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using OrderPlacer.Bjs.Models;
//
//    var shipOrderShipperDto = ShipOrderShipperDto.FromJson(jsonString);

namespace ShipStationApi.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ShipOrderShipperDto
    {
        [JsonProperty("orderId", NullValueHandling = NullValueHandling.Ignore)]
        public long? OrderId { get; set; }

        [JsonProperty("carrierCode", NullValueHandling = NullValueHandling.Ignore)]
        public string CarrierCode { get; set; }

        [JsonProperty("shipDate", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? ShipDate { get; set; }

        [JsonProperty("trackingNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string TrackingNumber { get; set; }

        [JsonProperty("notifyCustomer", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotifyCustomer { get; set; }

        [JsonProperty("notifySalesChannel", NullValueHandling = NullValueHandling.Ignore)]
        public bool? NotifySalesChannel { get; set; }
    }

    public partial class ShipOrderShipperDto
    {
        public static ShipOrderShipperDto FromJson(string json) => JsonConvert.DeserializeObject<ShipOrderShipperDto>(json, Converter.Settings);
    }

    
}
